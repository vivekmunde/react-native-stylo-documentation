(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9291],{9066:function(e,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/usage",function(){return t(3958)}])},3830:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("h1",{className:"font-extralight",children:s})}},1590:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("p",{className:"mb-4 p-4 bg-gray-100 rounded",style:{overflow:"auto",maxHeight:"90vh"},children:(0,n.jsx)("code",{className:"text-black text-xs",style:{whiteSpace:"pre"},children:s})})}},8046:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.href,t=e.children;return(0,n.jsx)("a",{href:s,target:"_blank",rel:"noopener noreferrer",children:t})}},6734:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("small",{children:(0,n.jsx)("code",{className:"text-black bg-gray-100 p-1 rounded",children:s})})}},4743:function(e,s,t){"use strict";t.d(s,{Z:function(){return y}});var n=t(5893),r=t(9008),i=t.n(r),l=t(7294),a=t(8046),c=t(1664),o=t.n(c),h=function(){return(0,n.jsx)(o(),{href:"/",children:(0,n.jsxs)("a",{style:{fontSize:"20px",fontWeight:"200",lineHeight:1,whiteSpace:"nowrap",display:"flex",flexDirection:"row",alignItems:"center"},children:[(0,n.jsx)("span",{children:"react-native-"}),(0,n.jsx)("img",{alt:"stylo",src:"".concat("/react-native-stylo-documentation","/logo.png"),style:{height:"28px"}})]})})},d="p-4 pl-8 lg:col-span-2 xl:col-span-1 bg-white left-nav",m="border-l p-4 pb-16 lg:pr-8 xl:pr-8 col-span-7 lg:col-span-5 xl:col-span-4",y=function(e){var s=e.renderNavigation,t=e.renderContent,r=(0,l.useRef)(null),c=(0,l.useRef)(null),o=(0,l.useRef)("Closed"),y=function(){r.current&&("Open"===o.current?(o.current="Closed",r.current.className=d,c.current&&(c.current.className=m)):(o.current="Open",r.current.className="".concat(d," left-nav-visible"),c.current&&(c.current.className="".concat(m," main-content-no-scroll"))))};return(0,n.jsxs)(l.Fragment,{children:[(0,n.jsxs)(i(),{children:[(0,n.jsx)("title",{children:"React Native Stylo"}),(0,n.jsx)("meta",{name:"description",content:"Infinitely scalable strongly typed themes, styling hooks & stylish components for React Native mobile applications"}),(0,n.jsx)("link",{rel:"icon",href:"".concat("/react-native-stylo-documentation","/favicon.ico")}),(0,n.jsx)("link",{rel:"stylesheet",href:"".concat("/react-native-stylo-documentation","/fontawesome-6.1.1/css/all.css")})]}),(0,n.jsx)("div",{className:"flex flex-col",children:(0,n.jsxs)("div",{className:"grid grid-cols-7 xl:grid-cols-5 grid-flow-col",children:[(0,n.jsxs)("div",{ref:r,className:"p-4 pl-8 lg:col-span-2 xl:col-span-1 bg-white left-nav",children:[(0,n.jsx)("button",{className:"left-nav-hamburger bg-gray-100 border-0 rounded p-2 mb-4",onClick:function(){y()},children:(0,n.jsx)("i",{className:"fas fa-xmark fa-fw text-xl text-gray-400"})}),(0,n.jsx)("div",{className:"mt-4 mb-8",children:(0,n.jsx)(h,{})}),s(),(0,n.jsx)("footer",{className:"mt-8",children:(0,n.jsx)(a.Z,{href:"https://github.com/vivekmunde/react-native-stylo",children:(0,n.jsx)("i",{className:"text-gray-700 text-2xl fab fa-github fa-fw"})})})]}),(0,n.jsxs)("main",{ref:c,className:"border-l p-4 pb-16 lg:pr-8 xl:pr-8 col-span-7 lg:col-span-5 xl:col-span-4",style:{minHeight:"100vh"},children:[(0,n.jsx)("button",{className:"left-nav-hamburger bg-pink-50 border-0 rounded p-2",onClick:function(){y()},children:(0,n.jsx)("i",{className:"fas fa-bars fa-fw text-xl text-pink-500"})}),t()]})]})})]})}},7370:function(e,s,t){"use strict";var n=t(5893),r=(t(7294),t(5565));s.Z=function(){return(0,n.jsx)("nav",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/",children:"Core concept"})}),(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/usage",children:"Usage"})})]})}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base m-0",children:"Core members"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/use-styles",children:"useStyles()"})}),(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/styles",children:"<Styles />"})})]})]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base m-0",children:"Hooks & components"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/theme",children:"Theme"})}),(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/theme-provider",children:"<ThemeProvider />"})}),(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/use-variables",children:"useVariables()"})}),(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/stylish",children:"Stylish"})}),(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/stylers",children:"Stylers"})})]})]}),(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/default-styles",children:"Default styles"})}),(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/style-names-sequence",children:"StyleNames sequence"})}),(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/tight-coupling",children:"Tightly coupled"})}),(0,n.jsx)("li",{children:(0,n.jsx)(r.Z,{href:"/creating-theme",children:"Creating a theme"})})]})}),(0,n.jsx)("li",{children:(0,n.jsx)("h5",{className:"text-base m-0",children:(0,n.jsx)(r.Z,{href:"/stylo-theme",children:"Stylo theme"})})})]})})}},5565:function(e,s,t){"use strict";var n=t(5893),r=t(1664),i=t.n(r),l=t(1163);t(7294);s.Z=function(e){var s=e.children,t=e.href,r=(0,l.useRouter)();return(0,n.jsx)(i(),{href:t,children:(0,n.jsx)("a",{className:r.pathname.toLowerCase()===t.toLowerCase()?"font-medium":"text-gray-800",style:{display:"block"},children:s})})}},6900:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children,t=e.className,r=e.style;return(0,n.jsx)("p",{className:"mb-4 ".concat(t),style:r,children:s})}},7687:function(e,s,t){"use strict";var n=t(5893);t(7294);function r(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}function i(e){for(var s=1;s<arguments.length;s++){var t=null!=arguments[s]?arguments[s]:{},n=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(s){r(e,s,t[s])}))}return e}s.Z=function(e){var s=e.children,t=e.id,r=e.level,l=function(){return(0,n.jsx)("a",{href:"#".concat(t),children:s})},a={className:"heading",id:t};return 1===r?(0,n.jsx)("h1",i({},a,{children:l()})):2===r?(0,n.jsx)("h2",i({},a,{children:l()})):3===r?(0,n.jsx)("h3",i({},a,{children:l()})):4===r?(0,n.jsx)("h4",i({},a,{children:l()})):(0,n.jsx)("h5",i({},a,{children:l()}))}},747:function(e,s,t){"use strict";var n=t(5893),r=(t(7294),t(1590));s.Z=function(e){var s=e.renderCode,t=e.imageAlt,i=e.imageUrl;return(0,n.jsxs)("div",{className:"grid grid-cols-12 lg:grid-cols-12 lg:grid-gap-4",children:[(0,n.jsx)("div",{className:"col-span-12 md:col-span-7 lg:col-span-7 lg:col-span-8",children:(0,n.jsx)(r.Z,{children:s()})}),(0,n.jsx)("div",{className:"pl-4 pr-4 col-span-12 md:col-span-5 lg:col-span-4",children:(0,n.jsx)("img",{className:"rounded-3xl border-4 border-pink-200",alt:t,src:"".concat("/react-native-stylo-documentation","/images/").concat(i)})})]})}},8468:function(e,s,t){"use strict";t.d(s,{e:function(){return n},y:function(){return r}});var n="/node_modules/react-native-stylo/lib/stylo",r="/node_modules/react-native-stylo/lib/stylo/themes"},3958:function(e,s,t){"use strict";t.r(s);var n=t(5893),r=t(9008),i=t.n(r),l=t(1664),a=t.n(l),c=t(7294),o=t(3830),h=t(1590),d=t(8046),m=t(6734),y=t(4743),u=t(7370),x=t(6900),f=t(7687),g=t(747),p=t(8468),j={id:"installation",title:"Installation"},S={id:"configure-theme-hooks-components",title:"Configure theme, styled hooks & components"},v={id:"theme-provider",title:"ThemeProvider setup"},b={id:"using-stylish-components",title:"Using stylish components"},w={id:"stylers",title:"Using stylers"},N={id:"using-variables",title:"Using variables"};s.default=function(){return(0,n.jsx)(y.Z,{renderNavigation:function(){return(0,n.jsx)(u.Z,{})},renderContent:function(){return(0,n.jsxs)(c.Fragment,{children:[(0,n.jsx)(i(),{children:(0,n.jsx)("title",{children:"Usage | React Native Stylo"})}),(0,n.jsxs)("article",{children:[(0,n.jsx)(o.Z,{children:"Usage"}),(0,n.jsx)("nav",{className:"p-4 mt-8 mb-4 bg-pink-50 rounded",children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"#".concat(j.id),children:j.title})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"#".concat(S.id),children:S.title})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"#".concat(v.id),children:v.title})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"#".concat(b.id),children:b.title})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"#".concat(w.id),children:w.title})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"#".concat(N.id),children:N.title})})]})}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(f.Z,{id:j.id,level:4,children:j.title}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Peer dependency:"}),(0,n.jsx)("br",{}),"Stylo uses ",(0,n.jsx)(d.Z,{href:"https://www.npmjs.com/package/react-native-vector-icons",children:"Vector Icons"}),", so it has a peer dependency of ",(0,n.jsx)(m.Z,{children:"react-native-vector-icons"}),"@^9.1.0."]}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)(m.Z,{children:"npm install --save react-native-vector-icons@^9.1.0 react-native-stylo"}),(0,n.jsx)("br",{})," ",(0,n.jsx)("br",{}),"OR",(0,n.jsx)("br",{})," ",(0,n.jsx)("br",{}),(0,n.jsx)(m.Z,{children:"yarn add react-native-vector-icons@^9.1.0 react-native-stylo"})]})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(f.Z,{id:S.id,level:4,children:S.title}),(0,n.jsxs)(x.Z,{children:["Stylo provides a ",(0,n.jsx)(a(),{href:"/stylo-theme",children:"default theme"})," & its ",(0,n.jsx)(a(),{href:"/tight-coupling",children:"tightly coupled"})," styling elements, ",(0,n.jsx)(a(),{href:"/stylish",children:"Stylish"})," components & ",(0,n.jsx)(a(),{href:"/stylers",children:"Styler"})," hooks, which are located at ",(0,n.jsx)("strong",{className:"font-semibold",children:p.e}),". Just copy the these to your project. You can freely modify the theme as per your needs."]}),(0,n.jsxs)(x.Z,{children:["E.g. ",(0,n.jsxs)(m.Z,{children:["cp -R [root]",p.e," [root]/app/stylo"]})]}),(0,n.jsx)(h.Z,{children:"[root]\n  |- app\n    |- components\n    |- screens\n    |- stylo\n      |- stylers\n      |- stylish\n      |- themes\n        |- types\n        |- default"}),(0,n.jsxs)(x.Z,{children:["You can create your own themes right from scratch. Please refer the ",(0,n.jsx)(a(),{href:"/theme",children:"Theme"})," documentation for more details."]}),(0,n.jsxs)(x.Z,{children:["The need for coping the ",(0,n.jsx)(m.Z,{children:"stylers"})," & ",(0,n.jsx)(m.Z,{children:"stylish"})," directories is explained it the document ",(0,n.jsx)(a(),{href:"/tight-coupling",children:"Tightly coupled"}),". To better understand the tight coupling, we recommend you to first go through the ",(0,n.jsx)(a(),{href:"/core-concept",children:"Core concept"}),", ",(0,n.jsx)(a(),{href:"/theme",children:"Theme"}),", ",(0,n.jsx)(a(),{href:"/stylish",children:"Stylish"})," & ",(0,n.jsx)(a(),{href:"/stylers",children:"Stylers"})," documents."]})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(f.Z,{id:v.id,level:4,children:v.title}),(0,n.jsxs)(x.Z,{children:["Wrap the application inside the ",(0,n.jsx)(m.Z,{children:"ThemeProvider"})," and supply the theme to it. The theme is collection of variables & and style definitions. ThemeProvider expects both variables & styles to be supplied to it."]}),(0,n.jsx)(h.Z,{children:"import { ThemeProvider } from 'react-native-stylo';\n\nimport { variables, styles } from './themes/default';\n\nconst App = () => (\n  <ThemeProvider variables={variables} styles={styles}>\n    // Application components\n  </ThemeProvider>\n);"}),(0,n.jsxs)(x.Z,{children:["Please refer the ",(0,n.jsx)(a(),{href:"/theme-provider",children:"<ThemeProvider />"})," documentation for more details."]})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(f.Z,{id:b.id,level:4,children:b.title}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Stylish"})," components are nothing but enhanced React Native components with added property called ",(0,n.jsx)(m.Z,{children:"styleNames"}),". Property ",(0,n.jsx)(m.Z,{children:"styleNames"})," accepts the eligible styles for the component which are defined in the theme."]}),(0,n.jsx)(g.Z,{renderCode:function(){return"import React from 'react';\nimport Stylish from '../../stylo/stylish';\n\nconst data = [\n  { name: 'Narayan Naresh Nathani', profileUrl: require('../../images/face-icon-1.png'), role: 'UI Developer' },\n  { name: 'Sumitra Suresh Sundaram', profileUrl: require('../../images/face-icon-2.png'), role: 'UX Designer' },\n  { name: 'Indumati Indraneel Iyengar', profileUrl: require('../../images/face-icon-3.png'), role: 'Software Developer' },\n];\n\nconst UsageStylishComponents = () => (\n  <Stylish.View styleNames={['Screen', 'BackgroundColor.Primary1']}>\n    <Stylish.SafeAreaView />\n    <Stylish.View styleNames={['Screen.Header', 'Padding']}>\n      <Stylish.Text styleNames={['H1']}>Usage</Stylish.Text>\n    </Stylish.View>\n    <Stylish.View styleNames={['Screen.Body', 'Padding']}>\n      <Stylish.Text styleNames={['H3', 'Margin.Bottom.Large']}>\n        Stylish Components\n      </Stylish.Text>\n      <Stylish.View\n        styleNames={['List', 'Border.Radius', 'BackgroundColor.White', 'Margin.Bottom.Large']}>\n        {data.map((it, index) => (\n          <Stylish.View\n            key={index}\n            styleNames={index > 0 ? ['List.Item', 'Border.Top'] : ['List.Item']}>\n            <Stylish.View styleNames={['List.Item.Left']}>\n              <Stylish.Image styleNames={['Avatar']} source={it.profileUrl} />\n            </Stylish.View>\n            <Stylish.View styleNames={['List.Item.Body']}>\n              <Stylish.Text styleNames={['Bold.Semi']}>{it.name}</Stylish.Text>\n              <Stylish.Text styleNames={['Color.Secondary', 'Small']}>\n                {it.role}\n              </Stylish.Text>\n            </Stylish.View>\n          </Stylish.View>\n        ))}\n      </Stylish.View>\n    </Stylish.View>\n  </Stylish.View>\n);"},imageAlt:"Stylish Components",imageUrl:"showcase-usage-stylish-components.png"}),(0,n.jsxs)(x.Z,{children:["Please refer the ",(0,n.jsx)(a(),{href:"/stylish",children:"Stylish"})," documentation for more details."]})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(f.Z,{id:w.id,level:4,children:w.title}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Stylers"})," are styling hooks which are used to define the styles for the components. Use these stylers in case you like to use the core React Native components instead of ","Stylo's"," stylish components. The styler hooks accept an argument ",(0,n.jsx)(m.Z,{children:"styleNames"}),". The argument ",(0,n.jsx)(m.Z,{children:"styleNames"})," accepts the eligible styles for the component which are defined in the theme."]}),(0,n.jsx)(g.Z,{renderCode:function(){return"import React, { useRef } from 'react';\nimport { Image, SafeAreaView, Text, View } from 'react-native';\nimport Stylers from '../../stylo/stylers';\n\nconst data = [\n  { name: 'Narayan Naresh Nathani', profileUrl: require('../../images/face-icon-1.png'), role: 'UI Developer' },\n  { name: 'Sumitra Suresh Sundaram', profileUrl: require('../../images/face-icon-2.png'), role: 'UX Designer' },\n  { name: 'Indumati Indraneel Iyengar', profileUrl: require('../../images/face-icon-3.png'), role: 'Software Developer' },\n];\n\nconst UsageStylersShowCase = () => {\n  const styles = useRef({\n    screen: Stylers.useViewStyles(['Screen', 'BackgroundColor.Primary1']),\n    screenHeader: Stylers.useViewStyles(['Screen.Header', 'Padding']),\n    screenTitle: Stylers.useTextStyles(['H1']),\n    screenBody: Stylers.useViewStyles(['Screen.Body', 'Padding']),\n    listTitle: Stylers.useTextStyles(['H3', 'Margin.Bottom.Large']),\n    list: Stylers.useViewStyles(['List', 'Border.Radius', 'BackgroundColor.White', 'Margin.Bottom.Large']),\n    listItem: Stylers.useViewStyles(['List.Item', 'Border.Top']),\n    listLastItem: Stylers.useViewStyles(['List.Item']),\n    listItemLeft: Stylers.useViewStyles(['List.Item.Left']),\n    listItemBody: Stylers.useViewStyles(['List.Item.Body']),\n    name: Stylers.useTextStyles(['Bold.Semi']),\n    role: Stylers.useTextStyles(['Color.Secondary', 'Small']),\n    avatar: Stylers.useImageStyles(['Avatar']),\n  }).current;\n\n  return (\n    <View style={styles.screen}>\n      <SafeAreaView />\n      <View style={styles.screenHeader}>\n        <Text style={styles.screenTitle}>Usage</Text>\n      </View>\n      <View style={styles.screenBody}>\n        <Text style={styles.listTitle}>Stylers</Text>\n        <View style={styles.list}>\n          {data.map((it, index) => (\n            <View\n              key={index}\n              style={index > 0 ? styles.listItem : styles.listLastItem}>\n              <View style={styles.listItemLeft}>\n                <Image style={styles.avatar} source={it.profileUrl} />\n              </View>\n              <View style={styles.listItemBody}>\n                <Text style={styles.name}>{it.name}</Text>\n                <Text style={styles.role}>{it.role}</Text>\n              </View>\n            </View>\n          ))}\n        </View>\n      </View>\n    </View>\n  );\n};"},imageAlt:"Stylers",imageUrl:"showcase-usage-stylers.png"}),(0,n.jsxs)(x.Z,{children:["Please refer the ",(0,n.jsx)(a(),{href:"/stylers",children:"Stylers"})," documentation for more details."]})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(f.Z,{id:N.id,level:4,children:N.title}),(0,n.jsxs)(x.Z,{children:["Variables are the core configuration values which are used to define the themes. Like, colors, paddings, margins etc.\xa0",(0,n.jsx)("strong",{className:"font-semibold",children:"useVariables()"})," hook is used to access the theme configuration values to create your own custom page specific styles."]}),(0,n.jsx)(g.Z,{renderCode:function(){return"import React, { useRef } from 'react';\nimport { StyleSheet, View, Text, SafeAreaView } from 'react-native';\nimport Stylers from '../../stylo/stylers';\n\nconst UsageUseVariablesShowCase = () => {\n  const [ padding, paddingLarge, margin, marginLarge, borderRadius, fontColor, fontSize, colorPrimary1, colorWhite ]\n    = Stylers.useVariables([ 'Padding', 'Padding.Large', 'Margin', 'Margin.Large', 'Border.Radius', 'Font.Color', 'Font.Size', 'Color.Primary1', 'Color.White' ]);\n\n  const styles = useRef(\n    StyleSheet.create({\n      screen: { flex: 1, backgroundColor: colorPrimary1.toString(), padding: Number(paddingLarge) },\n      screenHeader: { paddingVertical: Number(paddingLarge) },\n      screenBody: { padding: Number(padding) },\n      text: { color: fontColor.toString(), fontSize: Number(fontSize) },\n      h1: { fontWeight: '500', fontSize: 48, marginBottom: Number(marginLarge) },\n      h2: { fontWeight: '600', fontSize: 32, marginBottom: Number(marginLarge) },\n      paragraph: { marginBottom: Number(margin) },\n      card: { padding: Number(padding), borderRadius: Number(borderRadius), backgroundColor: colorWhite.toString() },\n    }),\n  ).current;\n\n  return (\n    <View style={styles.screen}>\n      <SafeAreaView />\n      <View style={styles.screenHeader}>\n        <Text style={[styles.text, styles.h1]}>Usage</Text>\n      </View>\n      <Text style={[styles.text, styles.h2]}>useVariables()</Text>\n      <View style={styles.card}>\n        <Text style={[styles.text, styles.paragraph]}>\n          Variables are the core configuration values which are used to define the themes. Like, colors, paddings, margins etc.\n        </Text>\n        <Text style={styles.text}>\n          The useVariables() hook is used to access the Theme Variables. A practical use of the useVariables() hook can be accessing & using the theme variable values to define styles inside the StyleSheet.create() API.\n        </Text>\n      </View>\n    </View>\n  );\n};"},imageAlt:"useVariables()",imageUrl:"showcase-usage-use-variables.png"}),(0,n.jsxs)(x.Z,{children:["Please refer the ",(0,n.jsx)(a(),{href:"/use-variables",children:"useVariables()"})," documentation for more details."]})]})]})]})}})}}},function(e){e.O(0,[9814,9774,2888,179],(function(){return s=9066,e(e.s=s);var s}));var s=e.O();_N_E=s}]);