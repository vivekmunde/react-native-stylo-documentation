(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[636],{4829:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/stylers",function(){return s(6608)}])},3830:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.children;return(0,n.jsx)("h1",{className:"font-extralight",children:t})}},5740:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.children;return(0,n.jsx)("blockquote",{className:"p-4 bg-pink-50 rounded mt-8 mb-8",children:(0,n.jsx)("strong",{className:"font-medium",children:t})})}},1590:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.children;return(0,n.jsx)("p",{className:"mb-4 p-4 bg-gray-100 rounded",style:{overflow:"auto",maxHeight:"90vh"},children:(0,n.jsx)("code",{className:"text-black text-xs",style:{whiteSpace:"pre"},children:t})})}},8046:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.href,s=e.children;return(0,n.jsx)("a",{href:t,target:"_blank",rel:"noopener noreferrer",children:s})}},6734:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.children;return(0,n.jsx)("small",{children:(0,n.jsx)("code",{className:"text-black bg-gray-100 p-1 rounded",children:t})})}},4743:function(e,t,s){"use strict";s.d(t,{Z:function(){return y}});var n=s(5893),l=s(9008),r=s.n(l),i=s(7294),c=s(8046),o=s(1664),a=s.n(o),h=function(){return(0,n.jsx)(a(),{href:"/",children:(0,n.jsxs)("a",{style:{fontSize:"20px",fontWeight:"200",lineHeight:1,whiteSpace:"nowrap",display:"flex",flexDirection:"row",alignItems:"center"},children:[(0,n.jsx)("span",{children:"react-native-"}),(0,n.jsx)("img",{alt:"stylo",src:"".concat("/react-native-stylo-documentation","/logo.png"),style:{height:"28px"}})]})})},d="p-4 pl-8 lg:col-span-2 xl:col-span-1 bg-white left-nav",m="border-l p-4 pb-16 lg:pr-8 xl:pr-8 col-span-7 lg:col-span-5 xl:col-span-4",y=function(e){var t=e.renderNavigation,s=e.renderContent,l=(0,i.useRef)(null),o=(0,i.useRef)(null),a=(0,i.useRef)("Closed"),y=function(){l.current&&("Open"===a.current?(a.current="Closed",l.current.className=d,o.current&&(o.current.className=m)):(a.current="Open",l.current.className="".concat(d," left-nav-visible"),o.current&&(o.current.className="".concat(m," main-content-no-scroll"))))};return(0,n.jsxs)(i.Fragment,{children:[(0,n.jsxs)(r(),{children:[(0,n.jsx)("title",{children:"React Native Stylo"}),(0,n.jsx)("meta",{name:"description",content:"Infinitely scalable strongly typed themes, styling hooks & stylish components for React Native mobile applications"}),(0,n.jsx)("link",{rel:"icon",href:"".concat("/react-native-stylo-documentation","/favicon.ico")}),(0,n.jsx)("link",{rel:"stylesheet",href:"".concat("/react-native-stylo-documentation","/fontawesome-6.1.1/css/all.css")})]}),(0,n.jsx)("div",{className:"flex flex-col",children:(0,n.jsxs)("div",{className:"grid grid-cols-7 xl:grid-cols-5 grid-flow-col",children:[(0,n.jsxs)("div",{ref:l,className:"p-4 pl-8 lg:col-span-2 xl:col-span-1 bg-white left-nav",children:[(0,n.jsx)("button",{className:"left-nav-hamburger bg-gray-100 border-0 rounded p-2 mb-4",onClick:function(){y()},children:(0,n.jsx)("i",{className:"fas fa-xmark fa-fw text-xl text-gray-400"})}),(0,n.jsx)("div",{className:"mt-4 mb-8",children:(0,n.jsx)(h,{})}),t(),(0,n.jsx)("footer",{className:"mt-8",children:(0,n.jsx)(c.Z,{href:"https://github.com/vivekmunde/react-native-stylo",children:(0,n.jsx)("i",{className:"text-gray-700 text-2xl fab fa-github fa-fw"})})})]}),(0,n.jsxs)("main",{ref:o,className:"border-l p-4 pb-16 lg:pr-8 xl:pr-8 col-span-7 lg:col-span-5 xl:col-span-4",style:{minHeight:"100vh"},children:[(0,n.jsx)("button",{className:"left-nav-hamburger bg-pink-50 border-0 rounded p-2",onClick:function(){y()},children:(0,n.jsx)("i",{className:"fas fa-bars fa-fw text-xl text-pink-500"})}),s()]})]})})]})}},7370:function(e,t,s){"use strict";var n=s(5893),l=(s(7294),s(5565));t.Z=function(){return(0,n.jsx)("nav",{children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/",children:"Core concept"})}),(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/usage",children:"Usage"})})]})}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base m-0",children:"Core members"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/use-styles",children:"useStyles()"})}),(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/styles",children:"<Styles />"})})]})]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base m-0",children:"Hooks & components"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/theme",children:"Theme"})}),(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/theme-provider",children:"<ThemeProvider />"})}),(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/use-variables",children:"useVariables()"})}),(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/stylish",children:"Stylish"})}),(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/stylers",children:"Stylers"})})]})]}),(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/default-styles",children:"Default styles"})}),(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/style-names-sequence",children:"StyleNames sequence"})}),(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/tight-coupling",children:"Tightly coupled"})}),(0,n.jsx)("li",{children:(0,n.jsx)(l.Z,{href:"/creating-theme",children:"Creating a theme"})})]})}),(0,n.jsx)("li",{children:(0,n.jsx)("h5",{className:"text-base m-0",children:(0,n.jsx)(l.Z,{href:"/stylo-theme",children:"Stylo theme"})})})]})})}},5565:function(e,t,s){"use strict";var n=s(5893),l=s(1664),r=s.n(l),i=s(1163);s(7294);t.Z=function(e){var t=e.children,s=e.href,l=(0,i.useRouter)();return(0,n.jsx)(r(),{href:s,children:(0,n.jsx)("a",{className:l.pathname.toLowerCase()===s.toLowerCase()?"font-medium":"text-gray-800",style:{display:"block"},children:t})})}},6900:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.children,s=e.className,l=e.style;return(0,n.jsx)("p",{className:"mb-4 ".concat(s),style:l,children:t})}},9122:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(){return(0,n.jsx)("small",{className:"font-light text-red-500",children:"(Required)"})}},7687:function(e,t,s){"use strict";var n=s(5893);s(7294);function l(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function r(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{},n=Object.keys(s);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(s).filter((function(e){return Object.getOwnPropertyDescriptor(s,e).enumerable})))),n.forEach((function(t){l(e,t,s[t])}))}return e}t.Z=function(e){var t=e.children,s=e.id,l=e.level,i=function(){return(0,n.jsx)("a",{href:"#".concat(s),children:t})},c={className:"heading",id:s};return 1===l?(0,n.jsx)("h1",r({},c,{children:i()})):2===l?(0,n.jsx)("h2",r({},c,{children:i()})):3===l?(0,n.jsx)("h3",r({},c,{children:i()})):4===l?(0,n.jsx)("h4",r({},c,{children:i()})):(0,n.jsx)("h5",r({},c,{children:i()}))}},6608:function(e,t,s){"use strict";s.r(t);var n=s(5893),l=s(9008),r=s.n(l),i=s(1664),c=s.n(i),o=s(7294),a=s(3830),h=s(5740),d=s(1590),m=s(6734),y=s(4743),u=s(7370),x=s(6900),f=s(9122),j=s(7687);t.default=function(){return(0,n.jsx)(y.Z,{renderNavigation:function(){return(0,n.jsx)(u.Z,{})},renderContent:function(){return(0,n.jsxs)(o.Fragment,{children:[(0,n.jsx)(r(),{children:(0,n.jsx)("title",{children:"Stylers | React Native Stylo"})}),(0,n.jsxs)("article",{children:[(0,n.jsx)(a.Z,{children:"Stylers"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Stylers"})," are the styling hooks. Stylers accept ",(0,n.jsx)(c(),{href:"/theme#style-name",children:"StyleNames"})," as its argument & return the style object. They read the styles defined for the ",(0,n.jsx)(m.Z,{children:"StyleNames"})," in the theme, combines these styles into one & returns the final style, a standard React Native style object."]}),(0,n.jsxs)(x.Z,{children:["Stylo's"," objective is to provide a styling hook for each React Native component. This way it plans to cover the styling requirements of all the components."]}),(0,n.jsxs)(x.Z,{children:["Each React Native component has its own style type. E.g. ",(0,n.jsx)(m.Z,{children:"Text"})," component needs style object of type ",(0,n.jsx)(m.Z,{children:"StyleProp<TextStyle>"}),",  ",(0,n.jsx)(m.Z,{children:"View"})," component needs style object of type ",(0,n.jsx)(m.Z,{children:"StyleProp<ViewStyle>"})," etc. So each styler is tightly coupled with a React Native component which returns a style object specific to that component."]}),(0,n.jsxs)(h.Z,{children:["All styler hooks use the ",(0,n.jsx)(c(),{href:"/use-styles",children:"useStyles()"})," hook internally to create & return the style object from ",(0,n.jsx)(m.Z,{children:"styleNames"})," supplied to them as an argument. A rule of thumb, prefer ",(0,n.jsx)(c(),{href:"/stylish",children:"Stylish"})," components over Stylers, use Styler hooks in cases where the use of ",(0,n.jsx)(c(),{href:"/stylish",children:"Stylish"})," components is not possible."]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"styler-arguments",level:4,children:"Styler arguments"}),(0,n.jsx)(x.Z,{children:"All stylers accept one argument."}),(0,n.jsxs)("section",{children:[(0,n.jsxs)("h5",{className:"text-lg",children:[(0,n.jsx)(m.Z,{children:"styleNames"})," ",(0,n.jsx)(f.Z,{})]}),(0,n.jsxs)(x.Z,{children:["The ",(0,n.jsx)(c(),{href:"/theme#style-name",children:"StyleNames"})," which define the styles."]})]})]}),(0,n.jsxs)(h.Z,{children:["All the code samples below use ",(0,n.jsx)(c(),{href:"/stylo-theme",children:"Stylo theme"}),". The code samples below do not display the pictorial outcomes. Also, the code samples below are not tightly coupled to the ",(0,n.jsx)(c(),{href:"/theme#style-name",children:"StyleName"})," types. If you have not yet gone through the tight coupling of style types then you can read the document ",(0,n.jsx)(c(),{href:"/tight-coupling",children:"Tightly coupled"}),"."]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-icon-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useIconStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"function useIconStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<TextStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"IconStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { StyleSheet } from 'react-native';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport { useIconStyles } from 'react-native-stylo';\nimport { TIconStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      iconStyle: useIconStyles<TIconStyle>(['Color.Primary', 'Large']),\n    })\n  ).current;\n\n  return (\n    <AntDesign style={styles.iconStyle} name=\"home\" {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-image-background-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useImageBackgroundStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"function useImageBackgroundStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"ImageBackgroundStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { ImageBackground, StyleSheet } from 'react-native';\nimport { useImageBackgroundStyles } from 'react-native-stylo';\nimport { TImageBackgroundStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      imageBackgroundStyle: useImageBackgroundStyles<TImageBackgroundStyle>(['BackgroundColor.Grey2']),\n    })\n  ).current;\n\n  return (\n    <ImageBackground style={styles.imageBackgroundStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-image-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useImageStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"function useImageStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<ImageStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"ImageStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { Image, StyleSheet } from 'react-native';\nimport { useImageStyles } from 'react-native-stylo';\nimport { TImageStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      imageStyle: useImageStyles<TImageStyle>(['Avatar', 'Avatar.Square', 'Avatar.Large']),\n    })\n  ).current;\n\n  return (\n    <Image style={styles.imageStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-safe-area-view-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useSafeAreaViewStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"function useSafeAreaViewStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"SafeAreaViewStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { useSafeAreaViewStyles } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      safeAreaViewStyle: useSafeAreaViewStyles<TViewStyle>(['BackgroundColor.Body']),\n    })\n  ).current;\n\n  return (\n    <SafeAreaView style={styles.safeAreaViewStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-scroll-view-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useScrollViewStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"export function useScrollViewStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"ScrollViewStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { useScrollViewStyles } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      scrollViewStyle: useScrollViewStyles<TViewStyle>(['Padding', 'BackgroundColor.Grey1']),\n    })\n  ).current;\n\n  return (\n    <ScrollView style={styles.scrollViewStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-scroll-view-content-container-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useScrollViewContentContainerStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"export function useScrollViewContentContainerStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"ScrollViewContentContainerStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { useScrollViewStyles, useScrollViewContentContainerStyles } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      scrollViewStyle: useScrollViewStyles<TViewStyle>(['BackgroundColor.Grey1']),\n      scrollViewContentContainerStyle: useScrollViewContentContainerStyles<TViewStyle>(['Padding']),\n    })\n  ).current;\n\n  return (\n    <ScrollView style={styles.scrollViewStyle} contentContainerStyle={styles.scrollViewContentContainerStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-text-input-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useTextInputStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"function useImageStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<TextStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"TextInputStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { TextInput, StyleSheet } from 'react-native';\nimport { useTextInputStyles } from 'react-native-stylo';\nimport { TTextInputStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      textInputStyle: useTextInputStyles<TTextInputStyle>(['Border', 'Border.Color.Primary']),\n    })\n  ).current;\n\n  return (\n    <TextInput style={styles.textInputStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-text-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useTextStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"function useTextStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<TextStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"TextStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { Text, StyleSheet } from 'react-native';\nimport { useTextStyles } from 'react-native-stylo';\nimport { TTextStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      textStyle: useTextStyles<TTextStyle>(['H1', 'Bold', 'Color.Primary']),\n    })\n  ).current;\n\n  return (\n    <Text style={styles.textStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-touchable-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useTouchableStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"function useTouchableStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"TouchableStyles"})]}),(0,n.jsxs)(x.Z,{children:["The ",(0,n.jsx)(m.Z,{children:"useTouchableStyles()"})," hook can be used for ",(0,n.jsx)(m.Z,{children:"TouchableOpacity"}),", ",(0,n.jsx)(m.Z,{children:"TouchableHighlight"})," & ",(0,n.jsx)(m.Z,{children:"Pressable"})," component."]}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { TouchableOpacity, StyleSheet } from 'react-native';\nimport { useTouchableStyles } from 'react-native-stylo';\nimport { TTouchableStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      buttonStyle: useTouchableStyles<TTouchableStyle>(['Button', 'Button.Large', 'BackgroundColor.Primary']),\n    })\n  ).current;\n\n  return (\n    <TouchableOpacity style={styles.buttonStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"use-view-styles",level:4,children:(0,n.jsx)(m.Z,{children:"useViewStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(d.Z,{children:"function useViewStyles<TStyleName extends string>(styleNames: TStyleName[]): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"ViewStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(d.Z,{children:"import React, { useRef } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useViewStyles } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      cardStyle: useViewStyles<TViewStyle>(['Padding', 'Border', 'Border.Radius.Large', 'Border.Color.Primary2', 'BackgroundColor.Primary1']),\n    })\n  ).current;\n\n  return (\n    <View style={styles.cardStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("i",{children:"Note: New Stylers for remaining React Native components will be added soon."})})]})]})}})}}},function(e){e.O(0,[9814,9774,2888,179],(function(){return t=4829,e(e.s=t);var t}));var t=e.O();_N_E=t}]);