(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2078],{2360:function(e,r,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/use-variables",function(){return n(3884)}])},1590:function(e,r,n){"use strict";var s=n(5893);n(7294);r.Z=function(e){var r=e.children;return(0,s.jsx)("p",{className:"mb-4 p-4 bg-gray-100 rounded",style:{overflow:"auto",maxHeight:"90vh"},children:(0,s.jsx)("code",{className:"text-black text-xs",style:{whiteSpace:"pre"},children:r})})}},6734:function(e,r,n){"use strict";var s=n(5893);n(7294);r.Z=function(e){var r=e.children;return(0,s.jsx)("small",{children:(0,s.jsx)("code",{className:"text-black bg-gray-100 p-1 rounded",children:r})})}},6900:function(e,r,n){"use strict";var s=n(5893);n(7294);r.Z=function(e){var r=e.children,n=e.className,t=e.style;return(0,s.jsx)("p",{className:"mb-4 ".concat(null!==n&&void 0!==n?n:""),style:t,children:r})}},7687:function(e,r,n){"use strict";var s=n(5893);n(7294);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{},s=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),s.forEach((function(r){t(e,r,n[r])}))}return e}r.Z=function(e){var r=e.children,n=e.id,t=e.level,i=function(){return(0,s.jsx)("a",{href:"#".concat(n),children:r})},l={className:"heading",id:n};return 1===t?(0,s.jsx)("h1",a({},l,{children:i()})):2===t?(0,s.jsx)("h2",a({},l,{children:i()})):3===t?(0,s.jsx)("h3",a({},l,{children:i()})):4===t?(0,s.jsx)("h4",a({},l,{children:i()})):(0,s.jsx)("h5",a({},l,{children:i()}))}},747:function(e,r,n){"use strict";var s=n(5893),t=n(7294),a=n(1590),i=function(e){var r=e.imageAlt,n=e.imageUrl,a=(0,t.useState)("Light"),i=a[0],l=a[1],c="border",o="border bg-pink-50 border-pink-100";return(0,s.jsxs)("div",{className:"pl-4 pr-4 col-span-12 md:col-span-5 lg:col-span-4",children:[(0,s.jsx)("div",{className:"p-2 pl-4 pr-4",children:(0,s.jsxs)("div",{className:"flex flex-row align-center justify-center",children:[(0,s.jsx)("button",{className:"p-1 text-sm rounded-l ".concat("Light"===i?o:c," border-r-[0]"),style:{width:"96px"},onClick:function(){l("Light")},children:"Light"}),(0,s.jsx)("button",{className:"p-1 text-sm rounded-r ".concat("Dark"===i?o:c," border-l-[0]"),style:{width:"96px"},onClick:function(){l("Dark")},children:"Dark"})]})}),(0,s.jsx)("img",{className:"rounded-3xl border-4 border-gray-700 mb-4",alt:r,src:"".concat("/react-native-stylo-documentation","/images/").concat("Light"===i?n.light:n.dark)})]})};r.Z=function(e){var r=e.renderCode,n=e.imageAlt,t=e.imageUrl;return(0,s.jsxs)("div",{className:"grid grid-cols-12 lg:grid-cols-12 lg:grid-gap-4",children:[(0,s.jsx)("div",{className:"col-span-12 md:col-span-7 lg:col-span-7 lg:col-span-8",children:(0,s.jsx)(a.Z,{children:r()})}),(0,s.jsx)("div",{className:"pl-4 pr-4 col-span-12 md:col-span-5 lg:col-span-4",children:"string"===typeof t?(0,s.jsx)("img",{className:"rounded-3xl border-4 border-gray-700 mb-4",alt:n,src:"".concat("/react-native-stylo-documentation","/images/").concat(t)}):(0,s.jsx)(i,{imageAlt:n,imageUrl:t})})]})}},3884:function(e,r,n){"use strict";n.r(r);var s=n(5893),t=n(9008),a=n.n(t),i=n(1664),l=n.n(i),c=n(7294),o=n(3830),d=n(1590),h=n(6734),u=n(4743),g=n(7370),m=n(6900),x=n(7687),b=n(747);r.default=function(){return(0,s.jsx)(u.Z,{renderNavigation:function(){return(0,s.jsx)(g.Z,{})},renderContent:function(){return(0,s.jsxs)(c.Fragment,{children:[(0,s.jsx)(a(),{children:(0,s.jsx)("title",{children:"useVariables() | React Native Stylo"})}),(0,s.jsxs)("article",{children:[(0,s.jsx)(o.Z,{children:"useVariables()"}),(0,s.jsxs)("p",{children:["The ",(0,s.jsx)("strong",{className:"font-semibold",children:"useVariables()"})," hook is used to access the ",(0,s.jsx)(l(),{href:"/theme#variables",children:"Theme Variables"}),". A practical use of the ",(0,s.jsx)(h.Z,{children:"useVariables()"})," hook can be accessing & using the theme variable values to define styles inside the ",(0,s.jsxs)(h.Z,{children:["StyleSheet.create(",")"]})," API."]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(x.Z,{id:"type-definition",level:4,children:"Type definition"}),(0,s.jsx)(d.Z,{children:"function useVariables<TVariable extends string>(names: TVariable[]): (string | number)[];"}),(0,s.jsxs)("section",{children:[(0,s.jsx)("h5",{className:"text-base",children:(0,s.jsx)(h.Z,{children:"TVariable"})}),(0,s.jsxs)(m.Z,{children:[(0,s.jsx)(l(),{href:"/theme#type-definitions",children:"Variable"})," type definition defined in the theme."]})]})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(x.Z,{id:"argument",level:4,children:"Argument"}),(0,s.jsxs)("section",{children:[(0,s.jsx)("h5",{className:"text-base",children:(0,s.jsx)(h.Z,{children:"names"})}),(0,s.jsxs)(m.Z,{children:["The variables, values of which need to be returned. E.g. ",(0,s.jsx)(h.Z,{children:"'Color.Primary'"}),", ",(0,s.jsx)(h.Z,{children:"Padding"}),", ",(0,s.jsx)(h.Z,{children:"'Border.Radius'"})," etc."]})]})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(x.Z,{id:"return-value",level:4,children:"Return value"}),(0,s.jsxs)(m.Z,{children:["An array of values. Value in the array can either be of type ",(0,s.jsx)(h.Z,{children:"string"})," or ",(0,s.jsx)(h.Z,{children:"number"}),"."]})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(x.Z,{id:"usage",level:4,children:"Usage"}),(0,s.jsx)(b.Z,{renderCode:function(){return"import React, { useRef } from 'react';\nimport { SafeAreaView, StyleSheet, Text, View } from 'react-native';\nimport Stylers from '../../stylo/stylers';\n\nconst UsageUseVariablesShowCase = () => {\n  const [padding, paddingLarge, margin, marginLarge, borderColor, borderRadius, fontColor, fontSize, screenColor, colorAlpha10]\n    = Stylers.useVariables(['Padding', 'Padding.Large', 'Margin', 'Margin.Large', 'Border.Color', 'Border.Radius', 'Font.Color', 'Font.Size', 'Screen.BackgroundColor', 'Color.Alpha10']);\n\n  const styles = useRef(\n    StyleSheet.create({\n      screen: { flex: 1, backgroundColor: screenColor.toString(), padding: Number(paddingLarge) },\n      screenHeader: { paddingVertical: Number(paddingLarge) },\n      screenBody: { padding: Number(padding) },\n      text: { color: fontColor.toString(), fontSize: Number(fontSize) },\n      h1: { fontWeight: '500', fontSize: 48, marginBottom: Number(marginLarge) },\n      h2: { fontWeight: '600', fontSize: 32, marginBottom: Number(marginLarge) },\n      paragraph: { marginBottom: Number(margin) },\n      card: { padding: Number(padding), borderWidth: 1, borderColor: borderColor.toString(), borderRadius: Number(borderRadius), backgroundColor: colorAlpha10.toString() },\n    }),\n  ).current;\n\n  return (\n    <View style={styles.screen}>\n      <SafeAreaView />\n      <View style={styles.screenHeader}>\n        <Text style={[styles.text, styles.h1]}>Usage</Text>\n      </View>\n      <Text style={[styles.text, styles.h2]}>useVariables()</Text>\n      <View style={styles.card}>\n        <Text style={[styles.text, styles.paragraph]}>\n          Variables are the core configuration values which are used to define\n          the themes. Like, colors, paddings, margins etc.\n        </Text>\n        <Text style={styles.text}>\n          The useVariables() hook is used to access the Theme Variables. A\n          practical use of the useVariables() hook can be accessing & using the\n          theme variable values to define styles inside the StyleSheet.create()\n          API.\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nexport default UsageUseVariablesShowCase;"},imageAlt:"useVariables()",imageUrl:{light:"showcase-use-variables-light.png",dark:"showcase-use-variables-dark.png"}})]})]})]})}})}}},function(e){e.O(0,[9814,529,9774,2888,179],(function(){return r=2360,e(e.s=r);var r}));var r=e.O();_N_E=r}]);