(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[455],{8643:function(e,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/stylish",function(){return t(7443)}])},3830:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("h1",{className:"font-extralight",children:s})}},5740:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("blockquote",{className:"p-4 bg-pink-50 rounded mb-4",children:(0,n.jsx)("strong",{className:"font-medium",children:s})})}},1590:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("p",{className:"mb-4 p-4 bg-gray-100 rounded",style:{overflow:"auto"},children:(0,n.jsx)("small",{children:(0,n.jsx)("code",{className:"text-black",style:{whiteSpace:"pre"},children:s})})})}},8046:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.href,t=e.children;return(0,n.jsx)("a",{href:s,target:"_blank",rel:"noopener noreferrer",children:t})}},6734:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("small",{children:(0,n.jsx)("code",{className:"text-black bg-gray-100 p-1 rounded",children:s})})}},5603:function(e,s,t){"use strict";var n=t(5893),l=t(9008),r=t.n(l),a=t(1664),i=t.n(a),c=t(1163),o=t(7294),h=function(e){var s=e.children,t=e.href,l=(0,c.useRouter)();return(0,n.jsx)("li",{children:(0,n.jsx)(i(),{href:t,children:(0,n.jsx)("a",{className:l.pathname.toLowerCase()===t.toLowerCase()?"font-medium":"text-gray-800",style:{display:"block"},children:s})})})};s.Z=function(e){var s=e.children;(0,c.useRouter)();return(0,n.jsxs)(o.Fragment,{children:[(0,n.jsxs)(r(),{children:[(0,n.jsx)("title",{children:"React Native Stylo"}),(0,n.jsx)("meta",{name:"description",content:"Completely detached and highly scalable React Native styles"}),(0,n.jsx)("link",{rel:"icon",href:"".concat("/react-native-stylo-documentation","/favicon.ico")})]}),(0,n.jsx)("div",{className:"lg:container lg:mx-auto flex flex-col",children:(0,n.jsxs)("div",{className:"grid grid-cols-7 xl:grid-cols-5 grid-flow-col",children:[(0,n.jsx)("nav",{className:"p-4 col-span-2 xl:col-span-1",children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsx)("ul",{className:"mt-4 mb-8",children:(0,n.jsx)("li",{children:(0,n.jsx)(i(),{href:"/",children:(0,n.jsxs)("a",{style:{fontSize:"20px",fontWeight:"200",lineHeight:1,whiteSpace:"nowrap",display:"flex",flexDirection:"row",alignItems:"center"},children:[(0,n.jsx)("span",{children:"react-native-"}),(0,n.jsx)("img",{alt:"stylo",src:"".concat("/react-native-stylo-documentation","/logo.png"),style:{height:"28px"}})]})})})})}),(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/",children:"Core concept"}),(0,n.jsx)(h,{href:"/usage",children:"Usage"})]})}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base",style:{margin:0},children:"Core members"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/use-styles",children:"useStyles()"}),(0,n.jsx)(h,{href:"/styles",children:"<Styles />"})]})]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base",style:{margin:0},children:"Hooks & components"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/theme",children:"Theme"}),(0,n.jsx)(h,{href:"/theme-provider",children:"<ThemeProvider />"}),(0,n.jsx)(h,{href:"/use-variables",children:"useVariables()"}),(0,n.jsx)(h,{href:"/stylish",children:"Stylish"}),(0,n.jsx)(h,{href:"/stylers",children:"Stylers"})]})]}),(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/default-styles",children:"Default styles"}),(0,n.jsx)(h,{href:"/style-names-sequence",children:"StyleNames sequence"}),(0,n.jsx)(h,{href:"/tight-coupling",children:"Tightly coupled"})]})})]})}),(0,n.jsx)("main",{className:"border-l p-4 col-span-5 xl:col-span-4",style:{minHeight:"100vh"},children:s})]})})]})}},2147:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(){return(0,n.jsx)("small",{className:"font-light text-green-600",children:"(Optional)"})}},6900:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children,t=e.className;return(0,n.jsx)("p",{className:"mb-4 ".concat(t),children:s})}},7687:function(e,s,t){"use strict";var n=t(5893);t(7294);function l(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}function r(e){for(var s=1;s<arguments.length;s++){var t=null!=arguments[s]?arguments[s]:{},n=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(s){l(e,s,t[s])}))}return e}s.Z=function(e){var s=e.children,t=e.id,l=e.level,a=function(){return(0,n.jsx)("a",{href:"#".concat(t),children:s})},i={className:"heading",id:t};return 1===l?(0,n.jsx)("h1",r({},i,{children:a()})):2===l?(0,n.jsx)("h2",r({},i,{children:a()})):3===l?(0,n.jsx)("h3",r({},i,{children:a()})):4===l?(0,n.jsx)("h4",r({},i,{children:a()})):(0,n.jsx)("h5",r({},i,{children:a()}))}},7443:function(e,s,t){"use strict";t.r(s);var n=t(5893),l=t(9008),r=t.n(l),a=t(1664),i=t.n(a),c=(t(7294),t(3830)),o=t(5740),h=t(1590),d=t(8046),m=t(6734),p=t(5603),x=t(2147),y=t(6900),j=t(7687);s.default=function(){return(0,n.jsxs)(p.Z,{children:[(0,n.jsx)(r(),{children:(0,n.jsx)("title",{children:"Stylish | React Native Stylo"})}),(0,n.jsxs)("article",{children:[(0,n.jsx)(c.Z,{children:"Stylish"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Stylish"})," components are nothing but enhanced ",(0,n.jsx)(d.Z,{href:"https://reactnative.dev/docs/components-and-apis",children:"React Native components"}),". Stylo adds two extra properties ",(0,n.jsx)(m.Z,{children:"styleNames"}),"(ref: ",(0,n.jsx)(i(),{href:"/theme/style-name",children:"StyleName"}),") & ",(0,n.jsx)(m.Z,{children:"styleNamespace"}),"(ref: ",(0,n.jsx)(i(),{href:"/theme/namespace",children:"StyleNamespace"}),") to the React Native components, on top of core properties provided by React Native. Stylo does not make any behavioral changes to these enhanced stylish components and keeps them as pure as they are defined by React Native. Stylish component reads the styles defined for the ",(0,n.jsx)(m.Z,{children:"styleNames"})," under the ",(0,n.jsx)(m.Z,{children:"styleNamespace"})," in the theme, combines these styles into one to create a standard React Native style object & applies this style to the React Native component."]}),(0,n.jsxs)(y.Z,{children:["Stylo's"," objective is to provide an enhanced Stylish component against for React Native component. This way it plans to cover all the React Native components."]}),(0,n.jsxs)(y.Z,{children:["Each React Native component has its own style type. E.g. ",(0,n.jsx)(m.Z,{children:"Text"})," component needs style object of type ",(0,n.jsx)(m.Z,{children:"StyleProp<TextStyle>"}),",  ",(0,n.jsx)(m.Z,{children:"View"})," component needs style object of type ",(0,n.jsx)(m.Z,{children:"StyleProp<ViewStyle>"})," etc. So each stylish component is tightly coupled with a React Native component which applies the style object specific to that component."]}),(0,n.jsxs)(o.Z,{children:["All stylish components use a matching ",(0,n.jsx)(i(),{href:"/stylers",children:"Styler"})," hook internally to create the style object from ",(0,n.jsx)(m.Z,{children:"styleNames"})," & ",(0,n.jsx)(m.Z,{children:"styleNamespace"})," supplied to them as props."]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"stylish-props",level:4,children:"Stylish props"}),(0,n.jsx)(y.Z,{children:"All stylish components have two extra props other than the default props provided by React Native. Both of these props are purposefully made optional, so that these Stylish components can still be used as plain React Native components."}),(0,n.jsxs)("section",{children:[(0,n.jsxs)("h5",{className:"text-lg",children:[(0,n.jsx)(m.Z,{children:"styleNames"})," ",(0,n.jsx)(x.Z,{})]}),(0,n.jsxs)(y.Z,{children:["The ",(0,n.jsx)(i(),{href:"/theme#style-name",children:"StyleNames"})," which define the styles."]})]}),(0,n.jsxs)("section",{children:[(0,n.jsxs)("h5",{className:"text-lg",children:[(0,n.jsx)(m.Z,{children:"styleNamespace"})," ",(0,n.jsx)(x.Z,{})]}),(0,n.jsxs)(y.Z,{children:["The ",(0,n.jsx)(i(),{href:"/theme#namespace",children:"StyleNamespace"})," to be used which holds the style definitions for the ",(0,n.jsx)(m.Z,{children:"StyleNames"})," supplied to the hook.",(0,n.jsx)("br",{}),"If not provided then the styler hook uses a matching default namespace from the collection of ","it's"," ",(0,n.jsx)(i(),{href:"/theme#default-namespaces",children:"Default StyleNamespaces"}),"."]})]})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"image-background",level:4,children:(0,n.jsx)(m.Z,{children:"<ImageBackground />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TImageBackgroundProps<TStyleName extends string, TStyleNamespace extends string> \n = ReactNative.ImageBackgroundProps & { styleNamespace?: TStyleNamespace; styleNames?: TStyleName[]; }"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"ImageBackgroundStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { ImageBackground } from 'react-native-stylo';\nimport { TImageBackgroundStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <ImageBackground<TImageBackgroundStyle> styleNames={['BackgroundColor.Grey2']} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"image",level:4,children:(0,n.jsx)(m.Z,{children:"<Image />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TImageProps<TStyleName extends string, TStyleNamespace extends string> \n = ReactNative.ImageProps & { styleNamespace?: TStyleNamespace; styleNames?: TStyleName[]; }"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"ImageStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { Image } from 'react-native-stylo';\nimport { TImageStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <Image<TImageStyle> styleNames={['Avatar', 'Avatar.Square', 'Avatar.Large']} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"safe-area-view",level:4,children:(0,n.jsx)(m.Z,{children:"<SafeAreaView />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TSafeAreaViewProps<TStyleName extends string, TStyleNamespace extends string> \n = ReactNative.ViewProps & { styleNamespace?: TStyleNamespace; styleNames?: TStyleName[]; }"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"SafeAreaViewStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { SafeAreaView } from 'react-native-stylo';\nimport { TSafeAreaViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <SafeAreaView<TSafeAreaViewStyle> styleNames={['BackgroundColor.Body']} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"scroll-view",level:4,children:(0,n.jsx)(m.Z,{children:"<ScrollView />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TScrollViewProps<\n  TScrollViewStyleName extends string,\n  TScrollViewStyleNamespace extends string,\n  TScrollViewContentContainerStyleName extends string,\n  TScrollViewContentContainerStyleNamespace extends string\n> = ReactNative.ViewProps & {\n  styleNamespace?: TScrollViewStyleNamespace;\n  styleNames?: TScrollViewStyleName[];\n  contentContainerStyleNamespace?: TScrollViewStyleNamespace;\n  contentContainerStyleNames?: TScrollViewStyleName[];\n}"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespaces:"})," ",(0,n.jsx)(m.Z,{children:"ScrollViewStyles"})," & ",(0,n.jsx)(m.Z,{children:"ScrollViewContentContainerStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { ScrollView } from 'react-native-stylo';\nimport { TScrollViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <ScrollView<TScrollViewStyle, TScrollViewContentContainerStyle>\n      styleNames={['BackgroundColor.Grey1']}\n      contentContainerStyleNames={['Padding']}\n      {...otherProps}\n    />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"text-input",level:4,children:(0,n.jsx)(m.Z,{children:"<TextInput />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TTextInputProps<TStyleName extends string, TStyleNamespace extends string> \n = ReactNative.TextInputProps & { styleNamespace?: TStyleNamespace; styleNames?: TStyleName[]; }"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"TextInputStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { TextInput } from 'react-native-stylo';\nimport { TTextInputStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <TextInput<TTextInputStyle> styleNames={['Border', 'Border.Color.Primary']} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"text",level:4,children:(0,n.jsx)(m.Z,{children:"<Text />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TTextProps<TStyleName extends string, TStyleNamespace extends string> \n = ReactNative.TextProps & { styleNamespace?: TStyleNamespace; styleNames?: TStyleName[]; }"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"TextStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { Text } from 'react-native-stylo';\nimport { TTextStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <Text<TTextStyle> styleNames={['Border', 'Border.Color.Primary']} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"pressable",level:4,children:(0,n.jsx)(m.Z,{children:"<Pressable />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TPressableProps<TStyleName extends string, TStyleNamespace extends string> \n = ReactNative.PressableProps & { styleNamespace?: TStyleNamespace; styleNames?: TStyleName[]; }"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"TouchableStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { Pressable } from 'react-native-stylo';\nimport { TTouchableStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <Pressable<TTouchableStyle> styleNames={['Button', 'Button.Large', 'BackgroundColor.Primary']} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"touchable-highlight",level:4,children:(0,n.jsx)(m.Z,{children:"<TouchableHighlight />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TTouchableHighlightProps<TStyleName extends string, TStyleNamespace extends string> \n = ReactNative.TouchableHighlightProps & { styleNamespace?: TStyleNamespace; styleNames?: TStyleName[]; }"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"TouchableStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { TouchableHighlight } from 'react-native-stylo';\nimport { TTouchableStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <TouchableHighlight<TTouchableStyle> styleNames={['Button', 'Button.Large', 'BackgroundColor.Primary']} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"touchable-opacity",level:4,children:(0,n.jsx)(m.Z,{children:"<TouchableOpacity />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TTouchableOpacityProps<TStyleName extends string, TStyleNamespace extends string> \n = ReactNative.TouchableOpacityProps & { styleNamespace?: TStyleNamespace; styleNames?: TStyleName[]; }"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"TouchableStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { TouchableOpacity } from 'react-native-stylo';\nimport { TTouchableStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <TouchableOpacity<TTouchableStyle> styleNames={['Button', 'Button.Large', 'BackgroundColor.Primary']} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(j.Z,{id:"view",level:4,children:(0,n.jsx)(m.Z,{children:"<View />"})}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Props type definition"})}),(0,n.jsx)(h.Z,{children:"export type TViewProps<TStyleName extends string, TStyleNamespace extends string> \n = ReactNative.ViewProps & { styleNamespace?: TStyleNamespace; styleNames?: TStyleName[]; }"}),(0,n.jsxs)(y.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(m.Z,{children:"ViewStyles"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React from 'react';\nimport { View } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <View<TViewStyle> styleNames={['Padding', 'Border', 'Border.Radius.Large', 'Border.Color.Primary2', 'BackgroundColor.Primary1']} {...otherProps} />\n  );\n}"})]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("i",{children:"Note: New Stylish components for remaining React Native components will be added soon."})})]})]})}}},function(e){e.O(0,[814,774,888,179],(function(){return s=8643,e(e.s=s);var s}));var s=e.O();_N_E=s}]);