(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[455],{8643:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/stylish",function(){return n(7443)}])},3830:function(e,t,n){"use strict";var s=n(5893);n(7294);t.Z=function(e){var t=e.children;return(0,s.jsx)("h1",{className:"font-extralight",children:t})}},1590:function(e,t,n){"use strict";var s=n(5893);n(7294);t.Z=function(e){var t=e.children;return(0,s.jsx)("p",{className:"mb-4 p-4 bg-gray-100 rounded",style:{overflow:"auto"},children:(0,s.jsx)("small",{children:(0,s.jsx)("code",{className:"text-black",style:{whiteSpace:"pre"},children:t})})})}},8046:function(e,t,n){"use strict";var s=n(5893);n(7294);t.Z=function(e){var t=e.href,n=e.children;return(0,s.jsx)("a",{href:t,target:"_blank",rel:"noopener noreferrer",children:n})}},6734:function(e,t,n){"use strict";var s=n(5893);n(7294);t.Z=function(e){var t=e.children;return(0,s.jsx)("small",{children:(0,s.jsx)("code",{className:"text-black bg-gray-100 p-1 rounded",children:t})})}},5603:function(e,t,n){"use strict";var s=n(5893),l=n(1664),r=n.n(l),a=n(1163),o=(n(7294),function(e){var t=e.children,n=e.href,l=(0,a.useRouter)();return(0,s.jsx)("li",{children:(0,s.jsx)(r(),{href:n,children:(0,s.jsx)("a",{className:l.pathname.toLowerCase()===n.toLowerCase()?"font-medium":"text-gray-800",style:{display:"block"},children:t})})})});t.Z=function(e){var t=e.children;(0,a.useRouter)();return(0,s.jsx)("div",{className:"lg:container lg:mx-auto flex flex-col",children:(0,s.jsxs)("div",{className:"grid grid-cols-7 xl:grid-cols-5 grid-flow-col",children:[(0,s.jsx)("nav",{className:"p-4 col-span-2 xl:col-span-1",children:(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("ul",{className:"mt-4 mb-8",children:(0,s.jsx)("li",{children:(0,s.jsx)(r(),{href:"/",children:(0,s.jsxs)("a",{style:{fontSize:"20px",fontWeight:"200",lineHeight:1,whiteSpace:"nowrap",display:"flex",flexDirection:"row",alignItems:"center"},children:[(0,s.jsx)("span",{children:"react-native-"}),(0,s.jsx)("img",{alt:"stylo",src:"".concat("/react-native-stylo-documentation","/logo.png"),style:{height:"28px"}})]})})})})}),(0,s.jsx)("li",{children:(0,s.jsxs)("ul",{className:"mb-8",children:[(0,s.jsx)(o,{href:"/",children:"Core concept"}),(0,s.jsx)(o,{href:"/usage",children:"Usage"})]})}),(0,s.jsxs)("li",{children:[(0,s.jsx)("h5",{className:"text-base",style:{margin:0},children:"Core members"}),(0,s.jsxs)("ul",{className:"mb-8",children:[(0,s.jsx)(o,{href:"/use-styles",children:"useStyles()"}),(0,s.jsx)(o,{href:"/styles",children:"<Styles />"})]})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)("h5",{className:"text-base",style:{margin:0},children:"Hooks & components"}),(0,s.jsxs)("ul",{className:"mb-8",children:[(0,s.jsx)(o,{href:"/theme",children:"Theme"}),(0,s.jsx)(o,{href:"/theme-provider",children:"<ThemeProvider />"}),(0,s.jsx)(o,{href:"/use-variables",children:"useVariables()"}),(0,s.jsx)(o,{href:"/stylish",children:"Stylish"}),(0,s.jsx)(o,{href:"/stylers",children:"Stylers"})]})]}),(0,s.jsx)("li",{children:(0,s.jsx)("ul",{className:"mb-8",children:(0,s.jsx)(o,{href:"/tight-coupling",children:"Tightly coupled"})})})]})}),(0,s.jsx)("main",{className:"border-l p-4 col-span-5 xl:col-span-4",style:{minHeight:"100vh"},children:t})]})})}},2147:function(e,t,n){"use strict";var s=n(5893);n(7294);t.Z=function(){return(0,s.jsx)("small",{className:"font-light text-green-600",children:"(Optional)"})}},6900:function(e,t,n){"use strict";var s=n(5893);n(7294);t.Z=function(e){var t=e.children,n=e.className;return(0,s.jsx)("p",{className:"mb-4 ".concat(n),children:t})}},9122:function(e,t,n){"use strict";var s=n(5893);n(7294);t.Z=function(){return(0,s.jsx)("small",{className:"font-light text-red-400",children:"(Required)"})}},7687:function(e,t,n){"use strict";var s=n(5893);n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},s=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),s.forEach((function(t){l(e,t,n[t])}))}return e}t.Z=function(e){var t=e.children,n=e.id,l=e.level,a=function(){return(0,s.jsx)("a",{href:"#".concat(n),children:t})},o={className:"heading",id:n};return 1===l?(0,s.jsx)("h1",r({},o,{children:a()})):2===l?(0,s.jsx)("h2",r({},o,{children:a()})):3===l?(0,s.jsx)("h3",r({},o,{children:a()})):4===l?(0,s.jsx)("h4",r({},o,{children:a()})):(0,s.jsx)("h5",r({},o,{children:a()}))}},7443:function(e,t,n){"use strict";n.r(t);var s=n(5893),l=n(9008),r=n.n(l),a=n(1664),o=n.n(a),i=(n(7294),n(3830)),c=n(1590),m=n(8046),y=n(6734),p=n(5603),d=n(2147),h=n(6900),x=n(9122),S=n(7687);t.default=function(){return(0,s.jsxs)(p.Z,{children:[(0,s.jsxs)(r(),{children:[(0,s.jsx)("title",{children:"Stylish | React Native Stylo"}),(0,s.jsx)("meta",{name:"description",content:"Completely detached and highly scalable React Native styles"}),(0,s.jsx)("link",{rel:"icon",href:"/favicon.ico"})]}),(0,s.jsxs)("article",{children:[(0,s.jsx)(i.Z,{children:"Stylish"}),(0,s.jsxs)(h.Z,{children:[(0,s.jsx)("strong",{className:"font-semibold",children:"Stylish"})," components are nothing but enhanced ",(0,s.jsx)(m.Z,{href:"https://reactnative.dev/docs/components-and-apis",children:"React Native components"}),". Stylo adds two extra properties ",(0,s.jsx)(y.Z,{children:"styleNames"}),"(ref: ",(0,s.jsx)(o(),{href:"/theme/style-name",children:"StyleName"}),") & ",(0,s.jsx)(y.Z,{children:"styleNamespace"}),"(ref: ",(0,s.jsx)(o(),{href:"/theme/namespace",children:"Namespace"}),") to the React Native components, on top of core properties provided by React Native. Stylo does not make any behavioral changes to these enhanced stylish components and keeps them as pure as they are defined by React Native. Stylish component reads the styles defined for the ",(0,s.jsx)(y.Z,{children:"styleNames"})," under the ",(0,s.jsx)(y.Z,{children:"styleNamespace"})," in the theme, combines these styles into one to create a standard React Native style object & applies this style to the React Native component."]}),(0,s.jsxs)(h.Z,{children:["Stylo's"," objective is to provide an enhanced Stylish component against for React Native component. This way it plans to cover all the React Native components."]}),(0,s.jsxs)(h.Z,{children:["Each React Native component has its own style type. E.g. ",(0,s.jsx)(y.Z,{children:"Text"})," component needs style object of type ",(0,s.jsx)(y.Z,{children:"StyleProp<TextStyle>"}),",  ",(0,s.jsx)(y.Z,{children:"View"})," component needs style object of type ",(0,s.jsx)(y.Z,{children:"StyleProp<ViewStyle>"})," etc. So each stylish component is tightly coupled with a React Native component which applies the style object specific to that component."]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"stylish-props",level:4,children:"Stylish props"}),(0,s.jsx)(h.Z,{children:"All stylish components have two extra props other than the default props provided by React Native."}),(0,s.jsxs)("section",{children:[(0,s.jsxs)("h5",{className:"text-lg",children:[(0,s.jsx)(y.Z,{children:"styleNames"})," ",(0,s.jsx)(x.Z,{})]}),(0,s.jsxs)(h.Z,{children:["The ",(0,s.jsx)(o(),{href:"/theme#style-name",children:"StyleNames"})," which define the styles."]})]}),(0,s.jsxs)("section",{children:[(0,s.jsxs)("h5",{className:"text-lg",children:[(0,s.jsx)(y.Z,{children:"styleNamespace"})," ",(0,s.jsx)(d.Z,{})]}),(0,s.jsxs)(h.Z,{children:["The ",(0,s.jsx)(o(),{href:"/theme#namespace",children:"Namespace"})," to be used which holds the style definitions for the ",(0,s.jsx)(y.Z,{children:"StyleNames"})," supplied to the hook.",(0,s.jsx)("br",{}),"If not provided then the styler hook uses a matching default namespace from the collection of ","it's"," ",(0,s.jsx)(o(),{href:"/theme#default-namespaces",children:"Default Namespaces"}),"."]})]})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"image-background",level:4,children:(0,s.jsx)(y.Z,{children:"<ImageBackground />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { ImageBackground as ReactNativeImageBackground, ImageBackgroundProps } from 'react-native';\nimport { useImageBackgroundStyles } from '../stylers';\n\nexport type TImageBackgroundProps<TStyleName extends string, TStyleNamespace extends string> = ImageBackgroundProps &\n  {\n    styleNamespace?: TStyleNamespace;\n    styleNames?: TStyleName[];\n  };\n\nconst ImageBackground = <TStyleName extends string, TStyleNamespace extends string>({\n  styleNamespace,\n  styleNames,\n  style,\n  ...props\n}: TImageBackgroundProps<TStyleName, TStyleNamespace>) => {\n  const imageBackgroundStyle = useImageBackgroundStyles<T>(\n    styleNames,\n    styleNamespace ?? 'ImageBackgroundStyles',\n  );\n  return <ReactNativeImageBackground {...props} style={[imageBackgroundStyle, style]} />;\n};\n\nexport default ImageBackground;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { ImageBackground } from 'react-native-stylo';\nimport { TImageBackgroundStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <ImageBackground<TImageBackgroundStyle> styleNames={['BackgroundColor.Grey2']} {...otherProps} />\n  );\n}"})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"image",level:4,children:(0,s.jsx)(y.Z,{children:"<Image />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { Image as ReactNativeImage, ImageProps } from 'react-native';\nimport { useImageStyles } from '../stylers';\n\nexport type TImageProps<TStyleName extends string, TStyleNamespace extends string> = ImageProps &\n  {\n    styleNamespace?: TStyleNamespace;\n    styleNames?: TStyleName[];\n  };\n\nconst Image = <TStyleName extends string, TStyleNamespace extends string>({\n  styleNamespace,\n  styleNames,\n  style,\n  ...props\n}: TImageProps<TStyleName, TStyleNamespace>) => {\n  const imageStyle = useImageStyles<T>(\n    styleNames,\n    styleNamespace ?? 'ImageStyles',\n  );\n  return <ReactNativeImage {...props} style={[imageStyle, style]} />;\n};\n\nexport default Image;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { Image } from 'react-native-stylo';\nimport { TImageStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <Image<TImageStyle> styleNames={['Avatar', 'Avatar.Square', 'Avatar.Large']} {...otherProps} />\n  );\n}"})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"safe-area-view",level:4,children:(0,s.jsx)(y.Z,{children:"<SafeAreaView />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { SafeAreaView as ReactNativeSafeAreaView, ViewProps } from 'react-native';\nimport { useSafeAreaViewStyles } from '../stylers';\n\nexport type TSafeAreaViewProps<TStyleName extends string, TStyleNamespace extends string> = ViewProps &\n  {\n    styleNamespace?: TStyleNamespace;\n    styleNames?: TStyleName[];\n  };\n\nconst SafeAreaView = <TStyleName extends string, TStyleNamespace extends string>({\n  styleNamespace,\n  styleNames,\n  style,\n  ...props\n}: TSafeAreaViewProps<TStyleName, TStyleNamespace>) => {\n  const safeAreaViewStyle = useSafeAreaViewStyles<T>(\n    styleNames,\n    styleNamespace ?? 'SafeAreaViewStyles',\n  );\n  return <ReactNativeSafeAreaView {...props} style={[safeAreaViewStyle, style]} />;\n};\n\nexport default SafeAreaView;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { SafeAreaView } from 'react-native-stylo';\nimport { TSafeAreaViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <SafeAreaView<TSafeAreaViewStyle> styleNames={['BackgroundColor.Body']} {...otherProps} />\n  );\n}"})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"scroll-view",level:4,children:(0,s.jsx)(y.Z,{children:"<ScrollView />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { ScrollView as ReactNativeScrollView, ScrollViewProps } from 'react-native';\nimport {\n  TStylesProps,\n  useScrollViewStyles,\n  useScrollViewContentContainerStyles,\n} from '../stylers';\n\nexport type TScrollViewProps<\n  TScrollViewStyle extends string,\n  TScrollViewContentContainerStyle extends string,\n  TScrollViewStyleNamespace extends string,\n  TScrollViewContentContainerStyleNamespace extends string,\n> = ScrollViewProps & {\n  styleNamespace?: TScrollViewStyleNamespace | undefined;\n  styleNames?: TScrollViewStyle[] | undefined;\n  contentContainerStyleNamespace?: TScrollViewContentContainerStyleNamespace | undefined;\n  contentContainerStyleNames?: TScrollViewContentContainerStyle[] | undefined;\n};\n\nconst ScrollView = <\n  TScrollViewStyle extends string,\n  TScrollViewContentContainerStyle extends string,\n  TScrollViewStyleNamespace extends string,\n  TScrollViewContentContainerStyleNamespace extends string,\n>({\n  styleNamespace,\n  styleNames,\n  style,\n  contentContainerStyleNamespace,\n  contentContainerStyleNames,\n  contentContainerStyle,\n  ...props\n}: TScrollViewProps<TScrollViewStyle, TScrollViewContentContainerStyle, TScrollViewStyleNamespace, TScrollViewContentContainerStyleNamespace>) => {\n  const scrollViewStyle = useScrollViewStyles<TScrollViewStyle>(\n    styleNames,\n    styleNamespace ?? 'ScrollViewStyles',\n  );\n\n  const scrollViewContentContainerStyle =\n    useScrollViewContentContainerStyles<TScrollViewContentContainerStyle>(\n      contentContainerStyleNames,\n      contentContainerStyleNamespace ?? 'ScrollViewContentContainerStyles',\n    );\n\n  return (\n    <ReactNativeScrollView\n      {...props}\n      style={[scrollViewStyle, style]}\n      contentContainerStyle={[\n        scrollViewContentContainerStyle,\n        contentContainerStyle,\n      ]}\n    />\n  );\n};\n\nexport default ScrollView;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { ScrollView } from 'react-native-stylo';\nimport { TScrollViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <ScrollView<TScrollViewStyle, TScrollViewContentContainerStyle>\n      styleNames={['BackgroundColor.Grey1']}\n      contentContainerStyleNames={['Padding']}\n      {...otherProps}\n    />\n  );\n}"})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"text-input",level:4,children:(0,s.jsx)(y.Z,{children:"<TextInput />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { TextInput as ReactNativeTextInput, TextInputProps } from 'react-native';\nimport { useTextInputStyles } from '../stylers';\n\nexport type TTextInputProps<TStyleName extends string, TStyleNamespace extends string> = TextInputProps &\n  {\n    styleNamespace?: TStyleNamespace;\n    styleNames?: TStyleName[];\n  };\n\nconst TextInput = <TStyleName extends string, TStyleNamespace extends string>({\n  styleNamespace,\n  styleNames,\n  style,\n  ...props\n}: TTextInputProps<TStyleName, TStyleNamespace>) => {\n  const textInputStyle = useTextInputStyles<T>(\n    styleNames,\n    styleNamespace ?? 'TextInputStyles',\n  );\n  return <ReactNativeTextInput {...props} style={[textInputStyle, style]} />;\n};\n\nexport default TextInput;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { TextInput } from 'react-native-stylo';\nimport { TTextInputStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <TextInput<TTextInputStyle> styleNames={['Border', 'Border.Color.Primary']} {...otherProps} />\n  );\n}"})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"text",level:4,children:(0,s.jsx)(y.Z,{children:"<Text />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { Text as ReactNativeText, TextProps } from 'react-native';\nimport { useTextStyles } from '../stylers';\n\nexport type TTextProps<TStyleName extends string, TStyleNamespace extends string> = TextProps &\n  {\n    styleNamespace?: TStyleNamespace;\n    styleNames?: TStyleName[];\n  };\n\nconst Text = <TStyleName extends string, TStyleNamespace extends string>({\n  styleNamespace,\n  styleNames,\n  style,\n  ...props\n}: TTextProps<TStyleName, TStyleNamespace>) => {\n  const textStyle = useTextStyles<T>(\n    styleNames,\n    styleNamespace ?? 'TextStyles',\n  );\n  return <ReactNativeText {...props} style={[textStyle, style]} />;\n};\n\nexport default Text;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { Text } from 'react-native-stylo';\nimport { TTextStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <Text<TTextStyle> styleNames={['Border', 'Border.Color.Primary']} {...otherProps} />\n  );\n}"})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"pressable",level:4,children:(0,s.jsx)(y.Z,{children:"<Pressable />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport {\n  Pressable as RNPressable,\n  PressableProps,\n  StyleProp,\n  PressableStateCallbackType,\n  ViewStyle,\n} from 'react-native';\nimport { TStylesProps, useTouchableStyles } from '../stylers';\n\nexport type TPressableProps<TStyleName extends string, TStyleNamespace extends string> = PressableProps &\n  {\n    styleNamespace?: TStyleNamespace;\n    styleNames?: TStyleName[];\n  };\n\nconst Pressable = <TStyleName extends string, TStyleNamespace extends string>({\n  styleNamespace,\n  styleNames,\n  style,\n  ...props\n}: TPressableProps<TStyleName extends string, TStyleNamespace extends string>) => {\n  const viewStyle = useTouchableStyles<T>(\n    styleNames,\n    styleNamespace ?? 'TouchableStyles',\n  );\n\n  const pressableFunctionStyle =\n    typeof style === 'function'\n      ? (args: PressableStateCallbackType) => style(args)\n      : undefined;\n\n  return (\n    <RNPressable\n      {...props}\n      style={[\n        viewStyle,\n        pressableFunctionStyle !== undefined\n          ? (pressableFunctionStyle as StyleProp<ViewStyle>)\n          : (style as StyleProp<ViewStyle>),\n      ]}\n    />\n  );\n};\n\nexport default Pressable;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { Pressable } from 'react-native-stylo';\nimport { TTouchableStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <Pressable<TTouchableStyle> styleNames={['Button', 'Button.Large', 'BackgroundColor.Primary']} {...otherProps} />\n  );\n}"})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"touchable-highlight",level:4,children:(0,s.jsx)(y.Z,{children:"<TouchableHighlight />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport {\n  TouchableHighlight as RNTouchableHighlight,\n  TouchableHighlightProps,\n  ViewStyle,\n} from 'react-native';\nimport { TStylesProps, useTouchableStyles } from '../stylers';\n\nexport type TTouchableHighlightProps<TStyleName extends string, TStyleNamespace extends string> =\n  TouchableHighlightProps & {\n    styleNamespace?: TStyleNamespace;\n    styleNames?: TStyleName[];\n  };\n\nexport const TouchableHighlight = <TStyleName extends string, TStyleNamespace extends string>({\n  styleNamespace,\n  styleNames,\n  style,\n  ...props\n}: TTouchableHighlightProps<TStyleName extends string, TStyleNamespace extends string>) => {\n  const viewStyle = useTouchableStyles<T>(\n    styleNames,\n    styleNamespace ?? 'TouchableStyles',\n  );\n  return <RNTouchableHighlight {...props} style={[viewStyle, style]} />;\n};\n\nexport default TouchableHighlight;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { TouchableHighlight } from 'react-native-stylo';\nimport { TTouchableStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <TouchableHighlight<TTouchableStyle> styleNames={['Button', 'Button.Large', 'BackgroundColor.Primary']} {...otherProps} />\n  );\n}"})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"touchable-opacity",level:4,children:(0,s.jsx)(y.Z,{children:"<TouchableOpacity />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport {\n  TouchableOpacity as RNTouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\nimport { TStylesProps, useTouchableStyles } from '../stylers';\n\nexport type TTouchableOpacityProps<TStyleName extends string, TStyleNamespace extends string> = TouchableOpacityProps &\n  {\n    styleNamespace?: TStyleNamespace;\n    styleNames?: TStyleName[];\n  };\n\nconst TouchableOpacity = <TStyleName extends string, TStyleNamespace extends string>({\n  styleNamespace,\n  styleNames,\n  style,\n  ...props\n}: TTouchableOpacityProps<TStyleName extends string, TStyleNamespace extends string>) => {\n  const viewStyle = useTouchableStyles<T>(\n    styleNames,\n    styleNamespace ?? 'TouchableStyles',\n  );\n  return <RNTouchableOpacity {...props} style={[viewStyle, style]} />;\n};\n\nexport default TouchableOpacity;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { TouchableOpacity } from 'react-native-stylo';\nimport { TTouchableStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <TouchableOpacity<TTouchableStyle> styleNames={['Button', 'Button.Large', 'BackgroundColor.Primary']} {...otherProps} />\n  );\n}"})]}),(0,s.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,s.jsx)(S.Z,{id:"view",level:4,children:(0,s.jsx)(y.Z,{children:"<View />"})}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport {\n  View as RNView,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { TStylesProps, useViewStyles } from '../stylers';\n\nexport type TViewProps<TStyleName extends string, TStyleNamespace extends string> = ViewProps &\n  {\n    styleNamespace?: TStyleNamespace;\n    styleNames?: TStyleName[];\n  };\n\nconst View = <TStyleName extends string, TStyleNamespace extends string>({\n  styleNamespace,\n  styleNames,\n  style,\n  ...props\n}: TViewProps<TStyleName extends string, TStyleNamespace extends string>) => {\n  const viewStyle = useViewStyles<T>(\n    styleNames,\n    styleNamespace ?? 'ViewStyles',\n  );\n  return <RNView {...props} style={[viewStyle, style]} />;\n};\n\nexport default View;"}),(0,s.jsx)(h.Z,{children:(0,s.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,s.jsx)(c.Z,{children:"import React from 'react';\nimport { View } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  return (\n    <View<TViewStyle> styleNames={['Padding', 'Border', 'Border.Radius.Large', 'Border.Color.Primary2', 'BackgroundColor.Primary1']} {...otherProps} />\n  );\n}"})]})]})]})}}},function(e){e.O(0,[814,774,888,179],(function(){return t=8643,e(e.s=t);var t}));var t=e.O();_N_E=t}]);