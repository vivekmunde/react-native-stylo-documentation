(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2379],{2566:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/stylo-theme-tag-styles",function(){return t(3122)}])},1590:function(e,a,t){"use strict";var n=t(5893);t(7294);a.Z=function(e){var a=e.children;return(0,n.jsx)("p",{className:"mb-4 p-4 bg-gray-100 rounded",style:{overflow:"auto",maxHeight:"90vh"},children:(0,n.jsx)("code",{className:"text-black text-xs",style:{whiteSpace:"pre"},children:a})})}},7687:function(e,a,t){"use strict";var n=t(5893);t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{},n=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(a){l(e,a,t[a])}))}return e}a.Z=function(e){var a=e.children,t=e.id,l=e.level,i=function(){return(0,n.jsx)("a",{href:"#".concat(t),children:a})},s={className:"heading",id:t};return 1===l?(0,n.jsx)("h1",r({},s,{children:i()})):2===l?(0,n.jsx)("h2",r({},s,{children:i()})):3===l?(0,n.jsx)("h3",r({},s,{children:i()})):4===l?(0,n.jsx)("h4",r({},s,{children:i()})):(0,n.jsx)("h5",r({},s,{children:i()}))}},747:function(e,a,t){"use strict";var n=t(5893),l=(t(7294),t(1590));a.Z=function(e){var a=e.renderCode,t=e.imageAlt,r=e.imageUrl;return(0,n.jsxs)("div",{className:"grid grid-cols-12 lg:grid-cols-12 lg:grid-gap-4",children:[(0,n.jsx)("div",{className:"col-span-12 md:col-span-7 lg:col-span-7 lg:col-span-8",children:(0,n.jsx)(l.Z,{children:a()})}),(0,n.jsx)("div",{className:"pl-4 pr-4 col-span-12 md:col-span-5 lg:col-span-4",children:(0,n.jsx)("img",{className:"rounded-3xl border-4 border-pink-200",alt:t,src:"".concat("/react-native-stylo-documentation","/images/").concat(r)})})]})}},3122:function(e,a,t){"use strict";t.r(a),t.d(a,{default:function(){return m}});var n=t(5893),l=t(9008),r=t.n(l),i=t(7294),s=t(3830),o=t(1590),g=t(4743),c=t(7687),y=t(747),h=function(){return(0,n.jsx)(y.Z,{renderCode:function(){return"<Stylish.View styleNames={['Flex.Row', 'Flex.Wrap', 'Flex.AlignItems.Center', 'Margin.Bottom.Large']}>\n  <Stylish.View styleNames={['Tag', 'BackgroundColor.Primary']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Color.White']}>\n      Default\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Small', 'BackgroundColor.Info']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Small', 'Color.White']}>\n      Small\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Large', 'BackgroundColor.Warning']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Large', 'Color.White']}>\n      Large\n    </Stylish.Text>\n  </Stylish.View>\n</Stylish.View>\n\n<Stylish.View styleNames={['Flex.Row', 'Flex.Wrap', 'Flex.AlignItems.Center', 'Margin.Bottom.Large']}>\n  <Stylish.View styleNames={['Tag', 'Border', 'Border.Color.Primary']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Color.Primary']}>\n      Default\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Small', 'Border', 'Border.Color.Info']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Small', 'Color.Info']}>\n      Small\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Large', 'Border', 'Border.Color.Warning']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Large', 'Color.Warning']}>\n      Large\n    </Stylish.Text>\n  </Stylish.View>\n</Stylish.View>\n\n<Stylish.View styleNames={['Flex.Row', 'Flex.Wrap', 'Flex.AlignItems.Center', 'Margin.Bottom.Large']}>\n  <Stylish.View styleNames={['Tag', 'BackgroundColor.Primary']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Color.White']}>\n      Colour\n    </Stylish.Text>\n    <Stylish.Icon.AntDesign name=\"checkcircleo\" styleNames={['Tag.Icon', 'Tag.Icon.Right', 'Color.White']} />\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Small', 'BackgroundColor.Info']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Small', 'Color.White']}>\n      Size\n    </Stylish.Text>\n    <Stylish.Icon.AntDesign name=\"checkcircleo\" styleNames={['Tag.Icon', 'Tag.Icon.Right', 'Small', 'Color.White']} />\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Large', 'BackgroundColor.Warning']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Large', 'Color.White']}>\n      Shape\n    </Stylish.Text>\n    <Stylish.Icon.AntDesign name=\"checkcircleo\" styleNames={['Tag.Icon', 'Tag.Icon.Right', 'Large', 'Color.White']} />\n  </Stylish.View>\n</Stylish.View>\n\n<Stylish.View styleNames={['Flex.Row', 'Flex.Wrap', 'Flex.AlignItems.Center', 'Margin.Bottom.Large']}>\n  <Stylish.View styleNames={['Tag', 'Border', 'Border.Color.Primary', 'BackgroundColor.White']}>\n    <Stylish.Icon.AntDesign name=\"checkcircle\" styleNames={['Tag.Icon', 'Tag.Icon.Left', 'Color.Primary']} />\n    <Stylish.Text styleNames={['Tag.Text', 'Color.Primary']}>\n      Colour\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Small', 'Border', 'Border.Color.Info', 'BackgroundColor.White']}>\n    <Stylish.Icon.AntDesign name=\"checkcircle\" styleNames={['Tag.Icon', 'Tag.Icon.Left', 'Small', 'Color.Info']} />\n    <Stylish.Text styleNames={['Tag.Text', 'Small', 'Color.Info']}>\n      Size\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Large', 'Border', 'Border.Color.Warning', 'BackgroundColor.White']}>\n    <Stylish.Icon.AntDesign name=\"checkcircle\" styleNames={['Tag.Icon', 'Tag.Icon.Left', 'Large', 'Color.Warning']} />\n    <Stylish.Text styleNames={['Tag.Text', 'Large', 'Color.Warning']}>\n      Shape\n    </Stylish.Text>\n  </Stylish.View>\n</Stylish.View>\n\n<Stylish.View styleNames={['Flex.Row', 'Flex.Wrap', 'Flex.AlignItems.Center', 'Margin.Bottom.Large']}>\n  <Stylish.View styleNames={['Tag', 'BackgroundColor.Primary']}>\n    <Stylish.Image source={require('../../images/face-icon-1.png')} styleNames={['Tag.Avatar', 'Tag.Avatar.Right']} />\n    <Stylish.Text styleNames={['Tag.Text', 'Color.White']}>\n      Sajan\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Small', 'BackgroundColor.Info']}>\n    <Stylish.Image source={require('../../images/face-icon-2.png')} styleNames={['Tag.Avatar', 'Tag.Avatar.Small', 'Tag.Avatar.Right']} />\n    <Stylish.Text styleNames={['Tag.Text', 'Small', 'Color.White']}>\n      Alma\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Large', 'BackgroundColor.Warning']}>\n    <Stylish.Text styleNames={['Tag.Text', 'Large', 'Color.White']}>\n      Nalini\n    </Stylish.Text>\n    <Stylish.Image source={require('../../images/face-icon-3.png')} styleNames={['Tag.Avatar', 'Tag.Avatar.Large', 'Tag.Avatar.Right']} />\n  </Stylish.View>\n</Stylish.View>\n\n<Stylish.View styleNames={['Flex.Row', 'Flex.Wrap', 'Flex.AlignItems.Center', 'Margin.Bottom.Large']}>\n  <Stylish.View styleNames={['Tag', 'Border', 'Border.Color.Primary', 'BackgroundColor.White']}>\n    <Stylish.Image source={require('../../images/face-icon-1.png')} styleNames={['Tag.Avatar', 'Tag.Avatar.Left']} />\n    <Stylish.Text styleNames={['Tag.Text', 'Color.Primary']}>\n      Sajan\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Small', 'Border', 'Border.Color.Info', 'BackgroundColor.White']}>\n    <Stylish.Image source={require('../../images/face-icon-2.png')} styleNames={['Tag.Avatar', 'Tag.Avatar.Small', 'Tag.Avatar.Left']} />\n    <Stylish.Text styleNames={['Tag.Text', 'Small', 'Color.Info']}>\n      Alma\n    </Stylish.Text>\n  </Stylish.View>\n  <Stylish.View styleNames={['Tag', 'Tag.Large', 'Border', 'Border.Color.Warning', 'BackgroundColor.White']}>\n    <Stylish.Image source={require('../../images/face-icon-3.png')} styleNames={['Tag.Avatar', 'Tag.Avatar.Large', 'Tag.Avatar.Left']} />\n    <Stylish.Text styleNames={['Tag.Text', 'Large', 'Color.Warning']}>\n      Nalini\n    </Stylish.Text>\n  </Stylish.View>\n</Stylish.View>"},imageAlt:"Tag",imageUrl:"showcase-tag.png"})},T=t(7655),m=function(){return(0,n.jsx)(g.Z,{renderNavigation:function(){return(0,n.jsx)(T.Z,{})},renderContent:function(){return(0,n.jsxs)(i.Fragment,{children:[(0,n.jsx)(r(),{children:(0,n.jsx)("title",{children:"Tag | Stylo theme | React Native Stylo"})}),(0,n.jsxs)("article",{children:[(0,n.jsx)(s.Z,{children:"Tag"}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(c.Z,{id:"type-definition",level:5,children:"Type definition"}),(0,n.jsx)(o.Z,{children:"type TTagStyle = 'Tag' | 'Tag.Small' | 'Tag.Large';\n\nexport type TTagTextStyle = 'Tag.Text' | 'Tag.Text.Left' | 'Tag.Text.Right';\n\ntype TTagIconStyle = 'Tag.Icon | 'Tag.Icon.Left' | 'Tag.Icon.Right';\n\ntype TTagAvatarImageStyle =\n  | 'Tag.Avatar'\n  | 'Tag.Avatar.Small'\n  | 'Tag.Avatar.Large'\n  | 'Tag.Avatar.Left'\n  | 'Tag.Avatar.Right';"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(c.Z,{id:"style-names-hierarchy",level:5,children:"StyleNames hierarchy"}),(0,n.jsx)(o.Z,{children:"'Tag'\n  |- 'Tag.Icon'\n  |- 'Tag.Text'\n  |- 'Tag.Avatar';"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(c.Z,{id:"usage",level:5,children:"Usage"}),(0,n.jsx)(h,{})]})]})]})}})}}},function(e){e.O(0,[9814,1447,9774,2888,179],(function(){return a=2566,e(e.s=a);var a}));var a=e.O();_N_E=a}]);