(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[636],{4829:function(e,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/stylers",function(){return t(6608)}])},3830:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("h1",{className:"font-extralight",children:s})}},5740:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("blockquote",{className:"p-4 bg-pink-50 rounded mb-4",children:(0,n.jsx)("strong",{className:"font-medium",children:s})})}},1590:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("p",{className:"mb-4 p-4 bg-gray-100 rounded",style:{overflow:"auto"},children:(0,n.jsx)("small",{children:(0,n.jsx)("code",{className:"text-black",style:{whiteSpace:"pre"},children:s})})})}},6734:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children;return(0,n.jsx)("small",{children:(0,n.jsx)("code",{className:"text-black bg-gray-100 p-1 rounded",children:s})})}},5603:function(e,s,t){"use strict";var n=t(5893),l=t(9008),r=t.n(l),c=t(1664),i=t.n(c),a=t(1163),o=t(7294),h=function(e){var s=e.children,t=e.href,l=(0,a.useRouter)();return(0,n.jsx)("li",{children:(0,n.jsx)(i(),{href:t,children:(0,n.jsx)("a",{className:l.pathname.toLowerCase()===t.toLowerCase()?"font-medium":"text-gray-800",style:{display:"block"},children:s})})})};s.Z=function(e){var s=e.children;(0,a.useRouter)();return(0,n.jsxs)(o.Fragment,{children:[(0,n.jsxs)(r(),{children:[(0,n.jsx)("title",{children:"React Native Stylo"}),(0,n.jsx)("meta",{name:"description",content:"Completely detached and highly scalable React Native styles"}),(0,n.jsx)("link",{rel:"icon",href:"".concat("/react-native-stylo-documentation","/favicon.ico")})]}),(0,n.jsx)("div",{className:"lg:container lg:mx-auto flex flex-col",children:(0,n.jsxs)("div",{className:"grid grid-cols-7 xl:grid-cols-5 grid-flow-col",children:[(0,n.jsx)("nav",{className:"p-4 col-span-2 xl:col-span-1",children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsx)("ul",{className:"mt-4 mb-8",children:(0,n.jsx)("li",{children:(0,n.jsx)(i(),{href:"/",children:(0,n.jsxs)("a",{style:{fontSize:"20px",fontWeight:"200",lineHeight:1,whiteSpace:"nowrap",display:"flex",flexDirection:"row",alignItems:"center"},children:[(0,n.jsx)("span",{children:"react-native-"}),(0,n.jsx)("img",{alt:"stylo",src:"".concat("/react-native-stylo-documentation","/logo.png"),style:{height:"28px"}})]})})})})}),(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/",children:"Core concept"}),(0,n.jsx)(h,{href:"/usage",children:"Usage"})]})}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base",style:{margin:0},children:"Core members"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/use-styles",children:"useStyles()"}),(0,n.jsx)(h,{href:"/styles",children:"<Styles />"})]})]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base",style:{margin:0},children:"Hooks & components"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/theme",children:"Theme"}),(0,n.jsx)(h,{href:"/theme-provider",children:"<ThemeProvider />"}),(0,n.jsx)(h,{href:"/use-variables",children:"useVariables()"}),(0,n.jsx)(h,{href:"/stylish",children:"Stylish"}),(0,n.jsx)(h,{href:"/stylers",children:"Stylers"})]})]}),(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/default-styles",children:"Default styles"}),(0,n.jsx)(h,{href:"/style-names-sequence",children:"StyleNames sequence"}),(0,n.jsx)(h,{href:"/tight-coupling",children:"Tightly coupled"})]})})]})}),(0,n.jsx)("main",{className:"border-l p-4 col-span-5 xl:col-span-4",style:{minHeight:"100vh"},children:s})]})})]})}},2147:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(){return(0,n.jsx)("small",{className:"font-light text-green-600",children:"(Optional)"})}},6900:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(e){var s=e.children,t=e.className;return(0,n.jsx)("p",{className:"mb-4 ".concat(t),children:s})}},9122:function(e,s,t){"use strict";var n=t(5893);t(7294);s.Z=function(){return(0,n.jsx)("small",{className:"font-light text-red-400",children:"(Required)"})}},7687:function(e,s,t){"use strict";var n=t(5893);t(7294);function l(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}function r(e){for(var s=1;s<arguments.length;s++){var t=null!=arguments[s]?arguments[s]:{},n=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),n.forEach((function(s){l(e,s,t[s])}))}return e}s.Z=function(e){var s=e.children,t=e.id,l=e.level,c=function(){return(0,n.jsx)("a",{href:"#".concat(t),children:s})},i={className:"heading",id:t};return 1===l?(0,n.jsx)("h1",r({},i,{children:c()})):2===l?(0,n.jsx)("h2",r({},i,{children:c()})):3===l?(0,n.jsx)("h3",r({},i,{children:c()})):4===l?(0,n.jsx)("h4",r({},i,{children:c()})):(0,n.jsx)("h5",r({},i,{children:c()}))}},6608:function(e,s,t){"use strict";t.r(s);var n=t(5893),l=t(9008),r=t.n(l),c=t(1664),i=t.n(c),a=(t(7294),t(3830)),o=t(5740),h=t(1590),d=t(6734),m=t(5603),y=t(2147),x=t(6900),u=t(9122),S=t(7687);s.default=function(){return(0,n.jsxs)(m.Z,{children:[(0,n.jsx)(r(),{children:(0,n.jsx)("title",{children:"Stylers | React Native Stylo"})}),(0,n.jsxs)("article",{children:[(0,n.jsx)(a.Z,{children:"Stylers"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Stylers"})," are the styling hooks. Stylers accept ",(0,n.jsx)(i(),{href:"/theme#style-name",children:"StyleNames"})," & optional ",(0,n.jsx)(i(),{href:"/theme#namespace",children:"StyleNamespace"})," as its arguments & return the style object. They read the styles defined for the ",(0,n.jsx)(d.Z,{children:"StyleNames"})," under the ",(0,n.jsx)(d.Z,{children:"StyleNamespace"})," in the theme, combines these styles into one & returns the final style, a standard React Native style object."]}),(0,n.jsxs)(x.Z,{children:["Stylo's"," objective is to provide a styling hook for each React Native component. This way it plans to cover the styling requirements of all the components."]}),(0,n.jsxs)(x.Z,{children:["Each React Native component has its own style type. E.g. ",(0,n.jsx)(d.Z,{children:"Text"})," component needs style object of type ",(0,n.jsx)(d.Z,{children:"StyleProp<TextStyle>"}),",  ",(0,n.jsx)(d.Z,{children:"View"})," component needs style object of type ",(0,n.jsx)(d.Z,{children:"StyleProp<ViewStyle>"})," etc. So each styler is tightly coupled with a React Native component which returns a style object specific to that component."]}),(0,n.jsxs)(o.Z,{children:["All styler hooks use the ",(0,n.jsx)(i(),{href:"/use-styles",children:"useStyles()"})," hook internally to create & return the style object from ",(0,n.jsx)(d.Z,{children:"styleNames"})," & ",(0,n.jsx)(d.Z,{children:"styleNamespace"})," supplied to them as arguments."]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"styler-arguments",level:4,children:"Styler arguments"}),(0,n.jsx)(x.Z,{children:"All stylers accept two arguments."}),(0,n.jsxs)("section",{children:[(0,n.jsxs)("h5",{className:"text-lg",children:[(0,n.jsx)(d.Z,{children:"styleNames"})," ",(0,n.jsx)(u.Z,{})]}),(0,n.jsxs)(x.Z,{children:["The ",(0,n.jsx)(i(),{href:"/theme#style-name",children:"StyleNames"})," which define the styles."]})]}),(0,n.jsxs)("section",{children:[(0,n.jsxs)("h5",{className:"text-lg",children:[(0,n.jsx)(d.Z,{children:"styleNamespace"})," ",(0,n.jsx)(y.Z,{})]}),(0,n.jsxs)(x.Z,{children:["The ",(0,n.jsx)(i(),{href:"/theme#namespace",children:"StyleNamespace"})," to be used which holds the style definitions for the ",(0,n.jsx)(d.Z,{children:"StyleNames"})," supplied to the hook.",(0,n.jsx)("br",{}),"If not provided then the styler hook uses a matching default namespace from the collection of ","it's"," ",(0,n.jsx)(i(),{href:"/theme#default-namespaces",children:"Default StyleNamespaces"}),"."]})]})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"use-image-background-styles",level:4,children:(0,n.jsx)(d.Z,{children:"useImageBackgroundStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(h.Z,{children:"function useImageBackgroundStyles<TStyleName extends string, TStyleNamespace extends string>(\n  styleNames: TStyleName[], styleNamespace?: TStyleNamespace\n): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(d.Z,{children:"ImageBackgroundStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React, { useRef } from 'react';\nimport { ImageBackground, StyleSheet } from 'react-native';\nimport { TImageBackgroundStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      imageBackgroundStyle: useImageBackgroundStyles<TImageBackgroundStyle>(['BackgroundColor.Grey2']),\n    })\n  ).current;\n\n  return (\n    <ImageBackground style={styles.imageBackgroundStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"use-image-styles",level:4,children:(0,n.jsx)(d.Z,{children:"useImageStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(h.Z,{children:"function useImageStyles<TStyleName extends string, TStyleNamespace extends string>(\n  styleNames: TStyleName[], styleNamespace?: TStyleNamespace\n): StyleProp<ImageStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(d.Z,{children:"ImageStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React, { useRef } from 'react';\nimport { Image, StyleSheet } from 'react-native';\nimport { useImageStyles } from 'react-native-stylo';\nimport { TImageStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      imageStyle: useImageStyles<TImageStyle>(['Avatar', 'Avatar.Square', 'Avatar.Large']),\n    })\n  ).current;\n\n  return (\n    <Image style={styles.imageStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"use-safe-area-view-styles",level:4,children:(0,n.jsx)(d.Z,{children:"useSafeAreaViewStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(h.Z,{children:"function useSafeAreaViewStyles<TStyleName extends string, TStyleNamespace extends string>(\n  styleNames: TStyleName[], styleNamespace?: TStyleNamespace\n): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(d.Z,{children:"SafeAreaViewStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React, { useRef } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { useSafeAreaViewStyles } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      safeAreaViewStyle: useSafeAreaViewStyles<TViewStyle>(['BackgroundColor.Body']),\n    })\n  ).current;\n\n  return (\n    <SafeAreaView style={styles.safeAreaViewStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"use-scroll-view-styles",level:4,children:(0,n.jsx)(d.Z,{children:"useScrollViewStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(h.Z,{children:"export function useScrollViewStyles<TStyleName extends string, TStyleNamespace extends string>(\n  styleNames: TStyleName[], styleNamespace?: TStyleNamespace\n): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(d.Z,{children:"ScrollViewStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React, { useRef } from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { useScrollViewStyles } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      scrollViewStyle: useScrollViewStyles<TViewStyle>(['Padding', 'BackgroundColor.Grey1']),\n    })\n  ).current;\n\n  return (\n    <ScrollView style={styles.scrollViewStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"use-scroll-view-content-container-styles",level:4,children:(0,n.jsx)(d.Z,{children:"useScrollViewContentContainerStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(h.Z,{children:"export function useScrollViewContentContainerStyles<TStyleName extends string, TStyleNamespace extends string>(\n  styleNames: TStyleName[], styleNamespace?: TStyleNamespace\n): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(d.Z,{children:"ScrollViewContentContainerStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React, { useRef } from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { useScrollViewStyles, useScrollViewContentContainerStyles } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      scrollViewStyle: useScrollViewStyles<TViewStyle>(['BackgroundColor.Grey1']),\n      scrollViewContentContainerStyle: useScrollViewContentContainerStyles<TViewStyle>(['Padding']),\n    })\n  ).current;\n\n  return (\n    <ScrollView style={styles.scrollViewStyle} contentContainerStyle={styles.scrollViewContentContainerStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"use-text-input-styles",level:4,children:(0,n.jsx)(d.Z,{children:"useTextInputStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(h.Z,{children:"function useImageStyles<TStyleName extends string, TStyleNamespace extends string>(\n  styleNames: TStyleName[], styleNamespace?: TStyleNamespace\n): StyleProp<TextStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(d.Z,{children:"TextInputStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React, { useRef } from 'react';\nimport { TextInput, StyleSheet } from 'react-native';\nimport { useTextInputStyles } from 'react-native-stylo';\nimport { TTextInputStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      textInputStyle: useTextInputStyles<TTextInputStyle>(['Border', 'Border.Color.Primary']),\n    })\n  ).current;\n\n  return (\n    <TextInput style={styles.textInputStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"use-text-styles",level:4,children:(0,n.jsx)(d.Z,{children:"useTextStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(h.Z,{children:"function useTextStyles<TStyleName extends string, TStyleNamespace extends string>(\n  styleNames: TStyleName[], styleNamespace?: TStyleNamespace\n): StyleProp<TextStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(d.Z,{children:"TextStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React, { useRef } from 'react';\nimport { Text, StyleSheet } from 'react-native';\nimport { useTextStyles } from 'react-native-stylo';\nimport { TTextStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      textStyle: useTextStyles<TTextStyle>(['H1', 'Bold', 'Color.Primary']),\n    })\n  ).current;\n\n  return (\n    <Text style={styles.textStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"use-touchable-styles",level:4,children:(0,n.jsx)(d.Z,{children:"useTouchableStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(h.Z,{children:"function useTouchableStyles<TStyleName extends string, TStyleNamespace extends string>(\n  styleNames: TStyleName[], styleNamespace?: TStyleNamespace\n): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(d.Z,{children:"TouchableStyles"})]}),(0,n.jsxs)(x.Z,{children:["The ",(0,n.jsx)(d.Z,{children:"useTouchableStyles()"})," hook can be used for ",(0,n.jsx)(d.Z,{children:"TouchableOpacity"}),", ",(0,n.jsx)(d.Z,{children:"TouchableHighlight"})," & ",(0,n.jsx)(d.Z,{children:"Pressable"})," component."]}),(0,n.jsx)(h.Z,{children:"import React, { useRef } from 'react';\nimport { TouchableOpacity, StyleSheet } from 'react-native';\nimport { useTouchableStyles } from 'react-native-stylo';\nimport { TTouchableStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      buttonStyle: useTouchableStyles<TTouchableStyle>(['Button', 'Button.Large', 'BackgroundColor.Primary']),\n    })\n  ).current;\n\n  return (\n    <TouchableOpacity style={styles.buttonStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(S.Z,{id:"use-view-styles",level:4,children:(0,n.jsx)(d.Z,{children:"useViewStyles()"})}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Type definition"})}),(0,n.jsx)(h.Z,{children:"function useViewStyles<TStyleName extends string, TStyleNamespace extends string>(\n  styleNames: TStyleName[], styleNamespace?: TStyleNamespace\n): StyleProp<ViewStyle>"}),(0,n.jsxs)(x.Z,{children:[(0,n.jsx)("strong",{className:"font-semibold",children:"Default StyleNamespace:"})," ",(0,n.jsx)(d.Z,{children:"ViewStyles"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(h.Z,{children:"import React, { useRef } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useViewStyles } from 'react-native-stylo';\nimport { TViewStyle } from '../themes/types';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      cardStyle: useViewStyles<TViewStyle>(['Padding', 'Border', 'Border.Radius.Large', 'Border.Color.Primary2', 'BackgroundColor.Primary1']),\n    })\n  ).current;\n\n  return (\n    <View style={styles.cardStyle} {...otherProps} />\n  );\n}"})]}),(0,n.jsx)(x.Z,{children:(0,n.jsx)("i",{children:"Note: New Stylers for remaining React Native components will be added soon."})})]})]})}}},function(e){e.O(0,[814,774,888,179],(function(){return s=4829,e(e.s=s);var s}));var s=e.O();_N_E=s}]);