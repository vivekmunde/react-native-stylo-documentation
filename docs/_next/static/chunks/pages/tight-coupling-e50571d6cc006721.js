(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[466],{467:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tight-coupling",function(){return s(3640)}])},3830:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.children;return(0,n.jsx)("h1",{className:"font-extralight",children:t})}},1590:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.children;return(0,n.jsx)("p",{className:"mb-4 p-4 bg-gray-100 rounded",style:{overflow:"auto"},children:(0,n.jsx)("small",{children:(0,n.jsx)("code",{className:"text-black",style:{whiteSpace:"pre"},children:t})})})}},6734:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.children;return(0,n.jsx)("small",{children:(0,n.jsx)("code",{className:"text-black bg-gray-100 p-1 rounded",children:t})})}},5603:function(e,t,s){"use strict";var n=s(5893),l=s(9008),r=s.n(l),o=s(1664),i=s.n(o),c=s(1163),a=s(7294),h=function(e){var t=e.children,s=e.href,l=(0,c.useRouter)();return(0,n.jsx)("li",{children:(0,n.jsx)(i(),{href:s,children:(0,n.jsx)("a",{className:l.pathname.toLowerCase()===s.toLowerCase()?"font-medium":"text-gray-800",style:{display:"block"},children:t})})})};t.Z=function(e){var t=e.children;(0,c.useRouter)();return(0,n.jsxs)(a.Fragment,{children:[(0,n.jsxs)(r(),{children:[(0,n.jsx)("title",{children:"React Native Stylo"}),(0,n.jsx)("meta",{name:"description",content:"Completely detached and highly scalable React Native styles"}),(0,n.jsx)("link",{rel:"icon",href:"".concat("/react-native-stylo-documentation","/favicon.ico")})]}),(0,n.jsx)("div",{className:"lg:container lg:mx-auto flex flex-col",children:(0,n.jsxs)("div",{className:"grid grid-cols-7 xl:grid-cols-5 grid-flow-col",children:[(0,n.jsx)("nav",{className:"p-4 col-span-2 xl:col-span-1",children:(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsx)("ul",{className:"mt-4 mb-8",children:(0,n.jsx)("li",{children:(0,n.jsx)(i(),{href:"/",children:(0,n.jsxs)("a",{style:{fontSize:"20px",fontWeight:"200",lineHeight:1,whiteSpace:"nowrap",display:"flex",flexDirection:"row",alignItems:"center"},children:[(0,n.jsx)("span",{children:"react-native-"}),(0,n.jsx)("img",{alt:"stylo",src:"".concat("/react-native-stylo-documentation","/logo.png"),style:{height:"28px"}})]})})})})}),(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/",children:"Core concept"}),(0,n.jsx)(h,{href:"/usage",children:"Usage"})]})}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base",style:{margin:0},children:"Core members"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/use-styles",children:"useStyles()"}),(0,n.jsx)(h,{href:"/styles",children:"<Styles />"})]})]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("h5",{className:"text-base",style:{margin:0},children:"Hooks & components"}),(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/theme",children:"Theme"}),(0,n.jsx)(h,{href:"/theme-provider",children:"<ThemeProvider />"}),(0,n.jsx)(h,{href:"/use-variables",children:"useVariables()"}),(0,n.jsx)(h,{href:"/stylish",children:"Stylish"}),(0,n.jsx)(h,{href:"/stylers",children:"Stylers"})]})]}),(0,n.jsx)("li",{children:(0,n.jsxs)("ul",{className:"mb-8",children:[(0,n.jsx)(h,{href:"/default-styles",children:"Default styles"}),(0,n.jsx)(h,{href:"/style-names-sequence",children:"StyleNames sequence"}),(0,n.jsx)(h,{href:"/tight-coupling",children:"Tightly coupled"})]})})]})}),(0,n.jsx)("main",{className:"border-l p-4 col-span-5 xl:col-span-4",style:{minHeight:"100vh"},children:t})]})})]})}},6900:function(e,t,s){"use strict";var n=s(5893);s(7294);t.Z=function(e){var t=e.children,s=e.className;return(0,n.jsx)("p",{className:"mb-4 ".concat(s),children:t})}},7687:function(e,t,s){"use strict";var n=s(5893);s(7294);function l(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function r(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{},n=Object.keys(s);"function"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(s).filter((function(e){return Object.getOwnPropertyDescriptor(s,e).enumerable})))),n.forEach((function(t){l(e,t,s[t])}))}return e}t.Z=function(e){var t=e.children,s=e.id,l=e.level,o=function(){return(0,n.jsx)("a",{href:"#".concat(s),children:t})},i={className:"heading",id:s};return 1===l?(0,n.jsx)("h1",r({},i,{children:o()})):2===l?(0,n.jsx)("h2",r({},i,{children:o()})):3===l?(0,n.jsx)("h3",r({},i,{children:o()})):4===l?(0,n.jsx)("h4",r({},i,{children:o()})):(0,n.jsx)("h5",r({},i,{children:o()}))}},3640:function(e,t,s){"use strict";s.r(t);var n=s(5893),l=s(9008),r=s.n(l),o=s(1664),i=s.n(o),c=(s(7294),s(3830)),a=s(1590),h=s(6734),d=s(5603),y=s(6900),m=s(7687);t.default=function(){return(0,n.jsxs)(d.Z,{children:[(0,n.jsx)(r(),{children:(0,n.jsx)("title",{children:"Tightly coupled | React Native Stylo"})}),(0,n.jsxs)("article",{children:[(0,n.jsx)(c.Z,{children:"Tightly coupled"}),(0,n.jsxs)(y.Z,{children:["To avoid passing the ",(0,n.jsx)(i(),{href:"/theme#style-name",children:"StyleNames"})," & ",(0,n.jsx)(i(),{href:"theme#namespace",children:"StyleNamespace"})," each time to the ",(0,n.jsx)(i(),{href:"/stylish",children:"Stylish"})," components & ",(0,n.jsx)(i(),{href:"/stylers",children:"Styler"})," hooks, you can tightly couple the types to the ",(0,n.jsx)("strong",{className:"font-semibold",children:"Stylish"})," components & ",(0,n.jsx)("strong",{className:"font-semibold",children:"Styler"})," hooks easily. Simply create wrapper components & hooks which will internally pass the desired style type and then use these components & hooks without need to pass the style types."]}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Text.tsx"})}),(0,n.jsx)(a.Z,{children:"import React from 'react';\nimport { Text as StyloText, TTextProps } from 'react-native-stylo';\n\nimport { TTextStyle } from '../themes/types';\n\nconst View: React.FC<TTextProps<TTextStyle>> = props => <StyloText {...props} />;\n\nexport default Text;\n"}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"useTextStyles.ts"})}),(0,n.jsx)(a.Z,{children:"import { useTextStyles as useStyloTextStyles } from 'react-native-stylo';\n\nimport { TTextStyle } from '../themes/types';\n\nconst useTextStyles = (\n  styleNames: TTextStyle[] | undefined,\n  styleNamespace?: string,\n) => useStyloTextStyles<TTextStyle>(styleNames, styleNamespace);\n\nexport default useTextStyles;\n"}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"ComponentA.tsx"})}),(0,n.jsx)(a.Z,{children:"import Text from '../stylish/Text';\n\nconst ComponentA = () => (\n  <Text styleNames={['H1', 'Bold', 'Align.Center']}>\n    {...}\n  </Text>\n);\n\nOR\n\nimport useTextStyles from '../stylers/useTextStyles';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      text: useTextStyles(['H1', 'Bold', 'Align.Center']),\n    }),\n  ).current;\n\n  return (\n    <Text style={styles.text}>\n      {...}\n    </Text>\n  );\n};"}),(0,n.jsxs)("section",{className:"no-vertical-margin-collapse",children:[(0,n.jsx)(m.Z,{id:"predefined-tightly-coupled-hooks-components",level:4,children:"Stylo at your help"}),(0,n.jsxs)(y.Z,{children:["To save time & effort, Stylo provides these wrapper hooks & components, which are located at ",(0,n.jsx)("strong",{className:"font-semibold",children:"/node_modules/react-native-stylo/lib/stylo"}),". Simply copy these to you app. Please note, these wrapper hooks & components import the types using a relative path ",(0,n.jsx)(h.Z,{children:"import { TTextStyle } from '../themes/types'"}),". If your theme types are defined at some other location then just change these type import paths in these hooks & components."]}),(0,n.jsxs)(y.Z,{children:["Wrappers for ",(0,n.jsx)(h.Z,{children:"Styler"})," hooks & ",(0,n.jsx)(h.Z,{children:"Stylish"})," components are located as below."]}),(0,n.jsx)(a.Z,{children:"[root]\n  |- node_modules\n    |- react-native-stylo\n      |- lib\n        |- stylo\n          |- stylers\n          |- stylish\n          |- themes\n            |- types\n            |- default"}),(0,n.jsx)(y.Z,{children:"Copy them to your app like below."}),(0,n.jsx)(a.Z,{children:"[root]\n  |- app\n    |- components\n    |- screens\n    |- stylo\n      |- stylers\n      |- stylish\n      |- themes\n        |- types\n        |- default"}),(0,n.jsx)(y.Z,{children:(0,n.jsx)("strong",{className:"font-semibold",children:"Usage"})}),(0,n.jsx)(a.Z,{children:"import React from 'react';\nimport Stylish from '../stylo/stylish';\nimport { styles, variables } from './stylo/themes/default';\n\nconst ComponentA = () => {\n  return (\n    <Stylish.View styleNames={['Border', 'Border.Radius', 'Border.Color.Primary']}>\n      <Stylish.View styleNames={['Padding', 'Border.Bottom', 'Border.Color.Primary']}>\n        <Stylish.Text styleNames={['H2']}>\n          Stylish component\n        </Stylish.Text>\n      </Stylish.View>\n      <Stylish.View>\n        <Stylish.Text styleNames={['Bold']}>\n          Stylish components are nothing but enhanced React Native components.\n          Stylo adds two extra properties styleNames & styleNamespace to the React Native components,\n          on top of core properties provided by React Native.\n        </Stylish.Text>\n      </Stylish.View>\n    </Stylish.View>\n  );\n};"}),(0,n.jsx)(a.Z,{children:"import React, { useRef } from 'react';\nimport { Text, StyleSheet } from 'react-native';\nimport { useTextStyles } from '../stylo/stylers';\n\nconst ComponentA = () => {\n  const styles = useRef(\n    StyleSheet.create({\n      textStyle: useTextStyles(['H1', 'Bold', 'Color.Primary']),\n    })\n  ).current;\n\n  return (\n    <Text style={styles.textStyle} {...otherProps} />\n  );\n}"})]})]})]})}}},function(e){e.O(0,[814,774,888,179],(function(){return t=467,e(e.s=t);var t}));var t=e.O();_N_E=t}]);